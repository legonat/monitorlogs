{"version":3,"sources":["components/dots.pulse.loader.js","components/login.component.js","components/LoginContainer.js","components/logout.component.js","components/register.component.js","components/navtabs.component.js","components/tablePagination.component.js","components/board.component.js","components/navbar.component.js","components/PrivateRoute.js","components/scrollToTopButton.component.js","App.js","serviceWorker.js","index.js"],"names":["DotsLoader","props","color","console","log","className","Login","this","submitted","name","type","placeholder","value","user","onChange","handleUsernameInput","pass","handlePassInput","id","htmlFor","onClick","handleLoginSubmit","href","Component","cookies","Cookies","LoginContainer","undefined","get","to","isAuthenticated","React","Logout","handleRender","handleLogoutSubmit","Register","passwordMatch","required","confirmPass","handleConfirmPassInput","handleRegisterSubmit","disabled","NavTabs","buildTabsRow","tabsRowElements","tabsArray","forEach","element","index","push","NavItem","onTabClick","NavLink","eventKey","buildTabsContent","tabsContentElements","propContent","contents","Tab","Pane","buildSessionsDropdown","sessions","dropdownValue","sessionsDropdownValue","handleSelectChange","handleSelectSessionChange","data","buildFilenamesDropdown","filenames","logsDropdownValue","handleSelectFilenameChange","currentTab","Container","defaultActiveKey","Row","Col","sm","Nav","variant","Content","animation","DropdownTabOrderedSelect","rows","d","Dropdown","Item","data-key","as","onSelect","Toggle","Menu","DropdownTabUnorderedSelect","TablePagination","handlePageClick","event","target","nodeName","pageNumber","parseInt","text","handlePageChange","handleFirstPageClick","handleLastPageClick","pageCount","handleForwardClick","currentPage","handleBackwardsClick","handleFastForwardClick","handleFastBackwardsClick","elements","offset","number","items","i","Pagination","Ellipsis","key","active","total","First","Prev","Next","Last","Board","checkAuth","logs","errors","handleLogsPageChange","handleErrorsPageChange","handleSearchPageChange","currentLogsPage","currentErrorsPage","currentSearchPage","filterText","filterService","filteredLogs","filteredErrors","filteredSearch","loading","errorsPageCount","logsPageCount","itemsPerPage","handleTabClick","searchResults","searchPageCount","handleLinkClick","logId","searchedPage","FilterableLogTable","firstTab","secondTab","toggleAnimation","names","NAMES","length","LogTable","lastItem","firstItem","slice","LogRow","scrollRef","createRef","date","service","description","link","ref","scrollIntoView","behavior","block","data-log-id","SelectRow","session","dates","NavbarContainer","AuthContext","Consumer","Navbar","bg","sticky","expand","Brand","aria-controls","Collapse","Form","InputGroup","FormControl","handleSearchInput","searchText","Append","Button","icon","faTimesCircle","handleSearchSubmit","classname","handleFilterTextInput","services","handleSelectServiceChange","class","Link","serviceInfo","DropdownSelect","selected","hidden","PrivateRoute","ComposedComponent","component","rest","Authentication","render","scrollToTop","window","scrollTo","top","left","faArrowCircleUp","size","createContext","App","history","useHistory","useState","setUser","setPass","setLogs","setErrors","setSearchResults","setConfirmPass","setPasswordMatch","setSearchText","setSubmitted","setIsAuthenticated","authToken","setAuthToken","selectedSessionId","setSelectedSessionId","selectedSession","setSelectedSession","setSessions","setServices","setFilenames","selectedFilename","setSelectedFilename","selectedService","setSelectedService","setFilterText","setFilteredLogs","setFilteredErrors","setFilteredSearch","setLoading","setCurrentTab","setLogsPageCount","setErrorsPageCount","setSearchPageCount","selectedLogId","setSelectedLogId","setSearchedPage","searchedSessionId","setSearchedSessionId","setCurrentLogsPage","setCurrentErrorsPage","setCurrentSearchPage","passV","confirmPassV","resetPagination","getTotalLength","len","input","login","password","fingerprint","axios","post","serverUrl","then","res","response","set","refreshToken","path","replace","go","catch","error","alert","status","remove","handleGetLogsBySession","currentSessionId","sessionId","sessionInputs","filename","config","headers","Authorization","lenLogs","lenErrors","confirmPassword","preventDefault","SendRegisterRequest","useEffect","localStorage","getItem","sessionStorage","isNaN","cookie","accessToken","handleAuthSubmit","results","handleGetLogsFilenames","setItem","removeItem","logsInputs","handleGetLogsSessions","handleGetLogServiceInfo","getSearchedPage","logRows","logDate","logDesc","toLowerCase","indexOf","errorRows","errorDate","errorDesc","searchRows","searchResult","searchDate","searchDesc","lenErrs","lenSearch","Provider","searchInput","handleUnblockSubmit","exact","page","dataset","linkInputs","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"uSAEe,SAASA,EAAWC,GAU/B,MAAoB,UAAhBA,EAAMC,OACNC,QAAQC,IAAIH,EAAMC,OAElB,yBAAKG,UAAU,iBACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,cAKH,SAAhBJ,EAAMC,OACNC,QAAQC,IAAIH,EAAMC,OAElB,yBAAKG,UAAU,gBACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,mBANvB,E,ICpBiBC,E,uKAEb,OAII,6BAAMC,KAAKN,MAAMO,UACV,6BAAK,kBAACR,EAAD,CAAYE,MAAQ,WAC1B,yBAAKG,UAAU,gBAChB,yBAAKA,UAAU,cACf,8BACG,sDAEA,yBAAKA,UAAU,cACX,2CACA,2BAAOI,KAAK,OAAOC,KAAK,OAAOL,UAAU,eAAeM,YAAY,iBACpEC,MAAOL,KAAKN,MAAMY,KAAMC,SAAUP,KAAKN,MAAMc,uBAGjD,yBAAKV,UAAU,cACX,2CACA,2BAAOI,KAAK,OAAOC,KAAK,WAAWL,UAAU,eAAeM,YAAY,iBACxEC,MAAOL,KAAKN,MAAMe,KAAMF,SAAUP,KAAKN,MAAMgB,mBAGjD,yBAAKZ,UAAU,cACX,yBAAKA,UAAU,kCACX,2BAAOK,KAAK,WAAWL,UAAU,uBAAuBa,GAAG,iBAC3D,2BAAOb,UAAU,uBAAuBc,QAAQ,gBAAhD,iBAKR,4BAAQT,KAAK,SAASL,UAAU,4BAA4Be,QAASb,KAAKN,MAAMoB,mBAAhF,UACA,uBAAGhB,UAAU,8BAAb,uBACwB,uBAAGiB,KAAK,mBAAR,oB,GAnCTC,aCE7BC,EAAU,IAAIC,IAgBJC,E,uKATZ,YAAeC,IADFH,EAAQI,IAAI,UAEhB,kBAAC,IAAD,CAAUC,GAAG,MAEf,kBAAC,EAAD,CAAgBhB,KAAMN,KAAKN,MAAMY,KAAMG,KAAMT,KAAKN,MAAMe,KAAMD,oBAAqBR,KAAKN,MAAMc,oBACnGE,gBAAiBV,KAAKN,MAAMgB,gBAAiBI,kBAAmBd,KAAKN,MAAMoB,kBAC3Eb,UAAWD,KAAKN,MAAMO,UAAWsB,gBAAiBvB,KAAKN,MAAM6B,sB,GAVtCC,IAAMR,WCF7BC,EAAU,IAAIC,IAECO,E,4MAEjBC,aAAe,SAAAhC,GAET,YAAa0B,IADFH,EAAQI,IAAI,UAEd,kBAAC,IAAD,CAAUC,GAAG,MAEZ,kBAAC7B,EAAD,O,kEAKZO,KAAKN,MAAMiC,uB,+BAKX,OACI,6BACK3B,KAAK0B,oB,GAnBcV,aCJfY,E,uKAEb,OAAQ,yBAAK9B,UAAU,gBACnB,yBAAKA,UAAU,cACX,8BACI,8CAEA,yBAAKA,UAAU,cACX,6CACA,2BAAOI,KAAK,OACRC,KAAK,OACLL,UAAU,eACVM,YAAY,iBACZC,MAAOL,KAAKN,MAAMY,KAClBC,SAAUP,KAAKN,MAAMc,uBAI7B,yBAAKV,UAAU,cAAf,IAA+BE,KAAKN,MAAMmC,cAAgB,6CAA4B,2BAAOlB,GAAG,aAAV,0BAClF,2BAAOT,KAAK,OACRC,KAAK,WACLL,UAAU,eACVM,YAAY,iBACZC,MAAOL,KAAKN,MAAMe,KAClBF,SAAUP,KAAKN,MAAMgB,gBACrBoB,UAAQ,KAIhB,yBAAKhC,UAAU,cACX,2BAAOI,KAAK,cACRC,KAAK,WACLL,UAAU,eACVM,YAAY,mBACZC,MAAOL,KAAKN,MAAMqC,YAClBxB,SAAUP,KAAKN,MAAMsC,uBACrBF,UAAQ,KAGhB,4BAAQ3B,KAAK,SACTL,UAAU,4BACVe,QAASb,KAAKN,MAAMuC,qBACpBC,UAAWlC,KAAKN,MAAMmC,eAH1B,aAMA,uBAAG/B,UAAU,8BAAb,wBACyB,uBAAIiB,KAAK,YAAT,qB,GA9CPC,a,4DCAjBmB,E,4MAInBC,aAAe,WACbxC,QAAQC,IAAI,qBACZ,IAAIwC,EAAkB,GAQtB,OAPA,EAAK3C,MAAM4C,UAAUC,SAAQ,SAACC,EAASC,GACrCJ,EAAgBK,KACd,kBAACC,EAAA,EAAD,CAAS9B,QAAS,kBAAM,EAAKnB,MAAMkD,WAAWH,KAC5C,kBAACI,EAAA,EAAD,CAASC,SAAUN,GAAUA,QAI5BH,G,EAGTU,iBAAmB,WACjBnD,QAAQC,IAAI,yBACZ,IAAImD,EAAsB,GACpBC,EAAc,EAAKvD,MAAMwD,SAS/B,OAPA,EAAKxD,MAAM4C,UAAUC,SAAQ,SAACC,EAASC,GACrCO,EAAoBN,KAClB,kBAACS,EAAA,EAAIC,KAAL,CAAUN,SAAUN,GACjBS,EAAYR,QAIZO,G,EAGTK,sBAAwB,WACtB,QAA4BjC,IAAxB,EAAK1B,MAAM4D,SACb,OAAO,KAET,IAAIC,EAAgB,iBAKpB,MAJyC,KAArC,EAAK7D,MAAM8D,wBACbD,EAAgB,EAAK7D,MAAM8D,uBAE7B5D,QAAQC,IAAI,qBAEV,kBAAC8C,EAAA,EAAD,CAAS7C,UAAU,WACjB,kBAAC,EAAD,CACE2D,mBAAoB,EAAK/D,MAAMgE,0BAC/BC,KAAM,EAAKjE,MAAM4D,SACjBjD,MAAOkD,M,EAMfK,uBAAyB,WACvB,QAA6BxC,IAAzB,EAAK1B,MAAMmE,UACb,OAAO,KAET,IAAIN,EAAgB,kBAKpB,MAJqC,KAAjC,EAAK7D,MAAMoE,oBACbP,EAAgB,EAAK7D,MAAMoE,mBAE7BlE,QAAQC,IAAI,qBAEV,kBAAC8C,EAAA,EAAD,KACE,kBAAC,EAAD,CACEc,mBAAoB,EAAK/D,MAAMqE,2BAC/BJ,KAAM,EAAKjE,MAAMmE,UACjBxD,MAAOkD,M,uDASb,OAFA3D,QAAQC,IAAIG,KAAKN,MAAMsE,YACvBpE,QAAQC,IAAIG,KAAKN,MAAM4C,UAAUtC,KAAKN,MAAMsE,aAE1C,6BACE,kBAACb,EAAA,EAAIc,UAAL,CAAetD,GAAG,qBAAqBuD,iBAAkBlE,KAAKN,MAAM4C,UAAUtC,KAAKN,MAAMsE,aACvF,kBAACG,EAAA,EAAD,CAAKrE,UAAU,YACb,kBAACsE,EAAA,EAAD,CAAKC,GAAI,IACP,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOL,iBAAkBlE,KAAKN,MAAM4C,UAAUtC,KAAKN,MAAMsE,aACnEhE,KAAKoC,eACLpC,KAAK4D,yBACL5D,KAAKqD,0BAGV,kBAACe,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAClB,EAAA,EAAIqB,QAAL,CAAaC,WAAS,GACnBzE,KAAK+C,4B,GAxFe/B,aAmG/B0D,E,uKAGF,IAAMC,EAAO,GAWb,OATA3E,KAAKN,MAAMiE,KAAKpB,SAAQ,SAACqC,GACvB,IACIjE,EADEN,EAAQuE,EAAEvE,MAEhBM,EAAKiE,EAAEjE,GACPgE,EAAKjC,KACH,kBAACmC,EAAA,EAASC,KAAV,CAAehC,SAAUnC,EAAIoE,WAAUpE,GAAKA,EAAK,QAAUN,OAK7D,kBAACwE,EAAA,EAAD,CAAUG,GAAIrC,IAASsC,SAAUjF,KAAKN,MAAM+D,oBAC1C,kBAACoB,EAAA,EAASK,OAAV,CAAiBF,GAAInC,KAAU7C,KAAKN,MAAMW,OAC1C,kBAACwE,EAAA,EAASM,KAAV,KACGR,Q,GAlB4B3D,aAyBjCoE,E,uKAGF,IAAMT,EAAO,GAWb,OATA3E,KAAKN,MAAMiE,KAAKpB,SAAQ,SAACqC,GACvB,IACIjE,EADEN,EAAQuE,EAAEvE,MAEhBM,EAAKiE,EAAEjE,GACPgE,EAAKjC,KACH,kBAACmC,EAAA,EAASC,KAAV,CAAehC,SAAUnC,EAAIoE,WAAUpE,GAAKN,OAK9C,kBAACwE,EAAA,EAAD,CAAUG,GAAIrC,IAASsC,SAAUjF,KAAKN,MAAM+D,oBAC1C,kBAACoB,EAAA,EAASK,OAAV,CAAiBF,GAAInC,KAAU7C,KAAKN,MAAMW,OAC1C,kBAACwE,EAAA,EAASM,KAAV,KACGR,Q,GAlB8B3D,a,SCzHpBqE,E,4MAGhBC,gBAAkB,SAAAC,GACf,GAA8B,SAA1BA,EAAMC,OAAOC,SAAqB,CACnC,IAAIC,EAAYC,SAASJ,EAAMC,OAAOI,MACtC,EAAKlG,MAAMmG,iBAAiBH,K,EAIhCI,qBAAuB,WACtB,EAAKpG,MAAMmG,iBAAiB,I,EAG7BE,oBAAsB,WACrB,EAAKrG,MAAMmG,iBAAiB,EAAKnG,MAAMsG,Y,EAGxCC,mBAAqB,WACpB,GAAI,EAAKvG,MAAMsG,UAAY,EAAKtG,MAAMwG,YAAa,CACjD,IAAIR,EAAY,EAAKhG,MAAMwG,YAAc,EACzC,EAAKxG,MAAMmG,iBAAiBH,K,EAK/BS,qBAAuB,WACtB,GAAI,EAAKzG,MAAMwG,YAAc,EAAG,CAC9B,IAAIR,EAAY,EAAKhG,MAAMwG,YAAc,EACzC,EAAKxG,MAAMmG,iBAAiBH,K,EAI/BU,uBAAyB,WACxB,GAAI,EAAK1G,MAAMsG,UAAY,EAAKtG,MAAMwG,YAAc,EAAG,CACrD,IAAIR,EAAY,EAAKhG,MAAMwG,YAAc,EACzC,EAAKxG,MAAMmG,iBAAiBH,K,EAI/BW,yBAA2B,WAC1B,GAAI,EAAK3G,MAAMwG,YAAc,EAAG,CAC9B,IAAIR,EAAY,EAAKhG,MAAMwG,YAAc,EACzC,EAAKxG,MAAMmG,iBAAiBH,K,uDAO9B,IAAMM,EAAYhG,KAAKN,MAAMsG,UACvBE,EAAclG,KAAKN,MAAMwG,YAE3BI,EAAW,EACXC,EAAS,EACb,QAAQ,GACJ,KAAMP,EAAY,GACdM,EAAW,GACXC,EAAS,GACT,MACJ,KAAMP,EAAY,IAAME,EAAc,GAClCI,EAAW,GACXC,EAAS,EACT,MACJ,KAAMP,EAAY,IAAME,EAAc,IAClCI,EAAW,GACXC,EAAS,EACT,MACJ,KAAML,EAAc,IAChBI,EAAW,GACXC,EAAS,EACT,MACJ,QACED,EAAW,GACXC,EAAS,EAMf,IAFA,IAAIC,EAAS,EACTC,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,IAEbJ,EAAcK,GAAgB,IAANG,GAAWV,EAAY,KAC/CS,EAAM/D,KAAK,kBAACiE,EAAA,EAAWC,SAAZ,CAAqB/F,QAAWb,KAAKqG,4BAChDG,EAASN,EAAcK,EAAS,GAGpC3G,QAAQC,IAAI,WACZ4G,EAAM/D,KACN,kBAACiE,EAAA,EAAW7B,KAAZ,CAAiB+B,IAAKL,EAAQM,OAAQN,IAAWN,EAAarF,QAASb,KAAKsF,iBAC3EkB,IAGDA,IAGIR,EAAYE,EAAcK,GAAUG,IAAMJ,GAC1CG,EAAM/D,KAAK,kBAACiE,EAAA,EAAWC,SAAZ,CAAqB/F,QAAWb,KAAKoG,4BAGhDI,EAASR,IApBcU,KAwB/B,OACA,6BACI,kBAACC,EAAA,EAAD,CAEET,YAAalG,KAAKN,MAAMwG,YACxBa,MAAO/G,KAAKN,MAAMsG,WAIhB,kBAACW,EAAA,EAAWK,MAAZ,CAAkBnG,QAAWb,KAAK8F,uBAClC,kBAACa,EAAA,EAAWM,KAAZ,CAAiBpG,QAAWb,KAAKmG,uBAChCM,EACD,kBAACE,EAAA,EAAWO,KAAZ,CAAiBrG,QAAWb,KAAKiG,qBACjC,kBAACU,EAAA,EAAWQ,KAAZ,CAAiBtG,QAAWb,KAAK+F,4B,GArHJ/E,aCAxBoG,E,4MA2BnBC,UAAY,SAAC3H,GAEX,IAAI8C,EAAU,kBAAC/C,EAAD,CAAYE,MAAM,UAwChC,YAtCgCyB,IAA5B,EAAK1B,MAAMmE,UAAU,KACvBjE,QAAQC,IAAI,8BACZ2C,EAAW,yBAAK1C,UAAU,eACxB,kBAAC,EAAD,CACEwH,KAAM,EAAK5H,MAAM4H,KACjBC,OAAQ,EAAK7H,MAAM6H,OACnB7D,0BAA2B,EAAKhE,MAAMgE,0BACtCK,2BAA4B,EAAKrE,MAAMqE,2BACvCyD,qBAAwB,EAAK9H,MAAM8H,qBACnCC,uBAA0B,EAAK/H,MAAM+H,uBACrCC,uBAA0B,EAAKhI,MAAMgI,uBACrCC,gBAAiB,EAAKjI,MAAMiI,gBAC5BC,kBAAmB,EAAKlI,MAAMkI,kBAC9BC,kBAAmB,EAAKnI,MAAMmI,kBAC9BvE,SAAU,EAAK5D,MAAM4D,SACrBQ,kBAAmB,EAAKpE,MAAMoE,kBAC9BN,sBAAuB,EAAK9D,MAAM8D,sBAClCsE,WAAY,EAAKpI,MAAMoI,WACvBC,cAAe,EAAKrI,MAAMqI,cAC1BC,aAAc,EAAKtI,MAAMsI,aACzBC,eAAgB,EAAKvI,MAAMuI,eAC3BC,eAAgB,EAAKxI,MAAMwI,eAC3BC,QAAS,EAAKzI,MAAMyI,QACpBC,gBAAiB,EAAK1I,MAAM0I,gBAC5BC,cAAe,EAAK3I,MAAM2I,cAC1BC,aAAc,EAAK5I,MAAM4I,aACzBtE,WAAY,EAAKtE,MAAMsE,WACvBuE,eAAgB,EAAK7I,MAAM6I,eAC3BC,cAAe,EAAK9I,MAAM8I,cAC1BC,gBAAiB,EAAK/I,MAAM+I,gBAC5BC,gBAAiB,EAAKhJ,MAAMgJ,gBAC5BC,MAAO,EAAKjJ,MAAMiJ,MAClBC,aAAc,EAAKlJ,MAAMkJ,aACzB/E,UAAW,EAAKnE,MAAMmE,cAM1B,6BACGrB,I,uDAQL,OADA5C,QAAQC,IAAI,mBAEVG,KAAKqH,gB,GAhFwBrG,aAqF7B6H,E,kDAEJ,WAAYnJ,GAAQ,IAAD,8BACjB,cAAMA,IAIR4C,UAAY,CAAC,OAAQ,UALF,EAMnBwG,SAAW,OANQ,EAOnBC,UAAY,SAPO,EAWnBC,gBAAkB,WAQhB,IAA2B,IAAvB,EAAKtJ,MAAMyI,QACb,OAAQ,kBAAC1I,EAAD,CAAYE,MAAM,SAG5B,IAAI2G,EAAW,GAwDf,OAvDA1G,QAAQC,IAAI,6BACZyG,EAAS5D,KACP,6BACE,kBAAC,EAAD,CACEwD,YAAa,EAAKxG,MAAMiI,gBACxB3B,UAAW,EAAKtG,MAAM2I,cACtBxC,iBAAkB,EAAKnG,MAAM8H,uBAE/B,kBAAC,EAAD,CACEyB,MAAOC,EACP5B,KAAM,EAAK5H,MAAM4H,KACjBgB,aAAc,EAAK5I,MAAM4I,aACzBpC,YAAa,EAAKxG,MAAMiI,gBACxBG,WAAY,EAAKpI,MAAMoI,WACvBC,cAAe,EAAKrI,MAAMqI,cAC1BC,aAAc,EAAKtI,MAAMsI,aACzBU,gBAAiB,EAAKhJ,MAAMgJ,gBAC5BC,MAAO,EAAKjJ,MAAMiJ,QAEpB,kBAAC,EAAD,CACEzC,YAAa,EAAKxG,MAAMiI,gBACxB3B,UAAW,EAAKtG,MAAM2I,cACtBxC,iBAAkB,EAAKnG,MAAM8H,yBAKnClB,EAAS5D,KACP,6BACE,kBAAC,EAAD,CACEwD,YAAa,EAAKxG,MAAMkI,kBACxB5B,UAAW,EAAKtG,MAAM0I,gBACtBvC,iBAAkB,EAAKnG,MAAM+H,yBAE/B,kBAAC,EAAD,CACEwB,MAAOC,EACP5B,KAAM,EAAK5H,MAAM6H,OACjBe,aAAc,EAAK5I,MAAM4I,aACzBpC,YAAa,EAAKxG,MAAMkI,kBACxBE,WAAY,EAAKpI,MAAMoI,WACvBC,cAAe,EAAKrI,MAAMqI,cAC1BC,aAAc,EAAKtI,MAAMuI,eACzBS,gBAAiB,EAAKhJ,MAAMgJ,gBAC5BC,MAAO,EAAKjJ,MAAMiJ,QAEpB,kBAAC,EAAD,CACEzC,YAAa,EAAKxG,MAAMkI,kBACxB5B,UAAW,EAAKtG,MAAM0I,gBACtBvC,iBAAkB,EAAKnG,MAAM+H,gCAOFrG,IAA7B,EAAK1B,MAAM8I,eAAqE,IAArC,EAAK9I,MAAM8I,cAAeW,QACvEvJ,QAAQC,IAAI,gBACZD,QAAQC,IAAI,EAAKH,MAAM8I,eAErB,6BACE,kBAAC,EAAD,CACEtC,YAAa,EAAKxG,MAAMmI,kBACxB7B,UAAW,EAAKtG,MAAM+I,gBACtB5C,iBAAkB,EAAKnG,MAAMgI,yBAE/B,kBAAC,EAAD,CACEuB,MAAOC,EACP5B,KAAM,EAAK5H,MAAM8I,cACjBF,aAAc,EAAK5I,MAAM4I,aACzBpC,YAAa,EAAKxG,MAAMmI,kBACxBC,WAAY,EAAKpI,MAAMoI,WACvBC,cAAe,EAAKrI,MAAMqI,cAC1BG,eAAgB,EAAKxI,MAAMwI,eAC3BQ,gBAAiB,EAAKhJ,MAAMgJ,gBAC5BC,MAAO,EAAKjJ,MAAMiJ,QAEpB,kBAAC,EAAD,CACEzC,YAAa,EAAKxG,MAAMmI,kBACxB7B,UAAW,EAAKtG,MAAM+I,gBACtB5C,iBAAkB,EAAKnG,MAAMgI,4BAKnC9H,QAAQC,IAAI,oBAGV,kBAAC,EAAD,CACEyC,UAAW,EAAKA,UAChBoB,0BAA2B,EAAKhE,MAAMgE,0BACtCK,2BAA4B,EAAKrE,MAAMqE,2BACvCT,SAAU,EAAK5D,MAAM4D,SACrBO,UAAW,EAAKnE,MAAMmE,UACtBC,kBAAmB,EAAKpE,MAAMoE,kBAC9BN,sBAAuB,EAAK9D,MAAM8D,sBAClCN,SAAUoD,EACV1D,WAAY,EAAKlD,MAAM6I,eACvBvE,WAAY,EAAKtE,MAAMsE,eAzHZ,E,qDAkIjB,OACEhE,KAAKgJ,sB,GArIsBhI,aA2I3BoI,E,uKAGM,IAAD,OAGDtB,EAAa9H,KAAKN,MAAMoI,WACxBC,EAAgB/H,KAAKN,MAAMqI,cAG3BpD,EAAO,GACT2D,EAAetI,KAAKN,MAAM4I,aAC1BpC,EAAclG,KAAKN,MAAMwG,YAEzBmD,EAAWnD,EAAcoC,EACzBgB,GAAapD,EAAc,GAAKoC,EAGjB,KAAfR,GAAuC,KAAlBC,GACZ/H,KAAKN,MAAM4H,KACLiC,MAAMD,EAAWD,GAC5B9G,SAAQ,SAAC1C,GACb8E,EAAKjC,KACH,kBAAC,EAAD,CACEgG,gBAAiB,EAAKhJ,MAAMgJ,gBAC5BC,MAAO,EAAKjJ,MAAMiJ,MAClB9I,IAAKA,EACLgH,IAAKhH,EAAIc,cAMeS,IAA5BpB,KAAKN,MAAMsI,cACMhI,KAAKN,MAAMsI,aACLuB,MAAMD,EAAWD,GACpC9G,SAAQ,SAAC1C,GACb8E,EAAKjC,KACH,kBAAC,EAAD,CACEiG,MAAO,EAAKjJ,MAAMiJ,MAClBD,gBAAiB,EAAKhJ,MAAMgJ,gBAC5B7I,IAAKA,EACLgH,IAAKhH,EAAIc,cAOiBS,IAA9BpB,KAAKN,MAAMwI,gBACQlI,KAAKN,MAAMwI,eACLqB,MAAMD,EAAWD,GACtC9G,SAAQ,SAAC1C,GACb8E,EAAKjC,KACH,kBAAC,EAAD,CACEiG,MAAO,EAAKjJ,MAAMiJ,MAClBD,gBAAiB,EAAKhJ,MAAMgJ,gBAC5B7I,IAAKA,EACLgH,IAAKhH,EAAIc,SAMjB,OAEE,+BACE,+BACE,4BACE,wBAAIA,GAAG,WAAP,QACA,wBAAIA,GAAG,WAAP,WACA,wBAAIA,GAAG,WAAP,gBAGJ,+BAAQgE,Q,GA1EO3D,aAiFjBwI,E,kDAEJ,WAAY9J,GAAQ,IAAD,8BACjB,cAAMA,IACD+J,UAAYjI,IAAMkI,YAFN,E,qDAOjB,IAOM7J,EAAMG,KAAKN,MAAMG,IACjBc,EAAKd,EAAIc,GACTgJ,EAAO9J,EAAI8J,KACXC,EAAU/J,EAAI+J,QACdC,EAAchK,EAAIgK,YAClBC,EAAO,kDAAoDnJ,EAEjE,OAAId,EAAIc,KAAOX,KAAKN,MAAMiJ,OACxB/I,QAAQC,IAAI,aAEV,wBAAIC,UAAU,cAAciK,IAjBf,SAACA,GACZA,GACFA,EAAIC,eAAe,CAAEC,SAAU,SAAUC,MAAO,aAgB9C,wBAAIvJ,GAAG,WAAU,uBAAGI,KAAM+I,EAAMjJ,QAASb,KAAKN,MAAMgJ,gBAAiByB,cAAaxJ,GAAKgJ,IACvF,wBAAIhJ,GAAG,WAAWiJ,GAClB,wBAAIjJ,GAAG,WAAWkJ,KAMtB,4BACE,wBAAIlJ,GAAG,WAAU,uBAAGI,KAAM+I,EAAMjJ,QAASb,KAAKN,MAAMgJ,gBAAiByB,cAAaxJ,EAAKb,UAAU,cAAc6J,IAC/G,wBAAIhJ,GAAG,WAAWiJ,GAClB,wBAAIjJ,GAAG,WAAWkJ,Q,GAtCL7I,aA4CfoJ,E,uKAEF,IAEIzJ,EAFE0J,EAAUrK,KAAKN,MAAM2K,QACrBC,EAAQD,EAAQC,MAItB,OAFA3J,EAAK0J,EAAQ1J,GAGX,4BAAQoE,WAAUpE,GAAKA,EAAK,QAAU2J,O,GARpBtJ,aAkDlBkI,GArCuBlI,YAqCf,CAAEL,GAAI,EAAGgJ,KAAM,OAAQC,QAAS,SAAUC,YAAa,gB,2DC/YhDU,E,uKACT,IAAD,OACP,OACE,kBAACC,GAAYC,SAAb,MACI,SAAApK,GAAK,OACJA,EAAMkB,gBAEH,kBAACmJ,EAAA,EAAD,CAAQC,GAAG,UAAUpG,QAAQ,OAAOqG,OAAO,MAAMC,OAAO,KAAK/K,UAAU,UACvE,kBAACwE,EAAA,EAAD,CAAKxE,UAAU,kCACb,kBAAC4K,EAAA,EAAOI,MAAR,CAAc/J,KAAK,KAAnB,aAEF,kBAAC2J,EAAA,EAAOxF,OAAR,CAAe6F,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBrK,GAAG,oBAClB,kBAAC2D,EAAA,EAAD,CAAKxE,UAAU,0CACb,kBAACmL,EAAA,EAAD,CAAMnL,UAAU,cACd,kBAACoL,EAAA,EAAD,CAAYpL,UAAU,aACpB,kBAACqL,EAAA,EAAD,CACE5K,SAAU,EAAKb,MAAM0L,kBACrB/K,MAAO,EAAKX,MAAM2L,WAClBlL,KAAK,OACLC,YAAY,aACZN,UAAU,aAEZ,kBAACoL,EAAA,EAAWI,OAAZ,KACE,kBAACC,EAAA,EAAD,CAAQhH,QAAQ,oBAAoB1D,QAAS,EAAKnB,MAAM0L,kBAAmBjL,KAAK,SAASL,UAAU,kBACjG,kBAAC,IAAD,CAAiB0L,KAAMC,OAEzB,kBAACF,EAAA,EAAD,CAAQ1K,QAAS,EAAKnB,MAAMgM,mBAAoBnH,QAAQ,oBAAoBzE,UAAU,UAAUK,KAAK,UAArG,cAOR,kBAACmE,EAAA,EAAD,CAAKqH,UAAU,0CACb,kBAACV,EAAA,EAAD,CAAMnL,UAAU,cACd,kBAACqL,EAAA,EAAD,CACE5K,SAAU,EAAKb,MAAMkM,sBACrBvL,MAAO,EAAKX,MAAMoI,WAClB3H,KAAK,OACLC,YAAY,YACZN,UAAU,wBAIhB,kBAACwE,EAAA,EAAD,CAAKqH,UAAU,uCACb,kBAACV,EAAA,EAAD,CAAMnL,UAAU,gBACd,kBAACoL,EAAA,EAAD,KACE,kBAAC,EAAD,CACEW,SAAU,EAAKnM,MAAMmM,SACrBxL,MAAO,EAAKX,MAAMW,MAClByL,0BAA2B,EAAKpM,MAAMoM,0BACtCC,MAAM,aAER,kBAACb,EAAA,EAAWI,OAAZ,KACE,kBAACC,EAAA,EAAD,CAAQhH,QAAQ,oBAAoB1D,QAAS,EAAKnB,MAAMoM,0BAA2BhM,UAAU,kBAC3F,kBAAC,IAAD,CAAiB0L,KAAMC,WAMjC,kBAACnH,EAAA,EAAD,CAAKxE,UAAU,2BACb,kBAACwE,EAAA,EAAI0H,KAAL,CAAUjL,KAAK,aAAf,aAzDJ,qC,GAN+BC,aA+EvCoJ,E,uKAEF,IAAMR,EAAU5J,KAAKN,MAAMkK,QACrBqC,EAAcrC,EAAQA,QACjBA,EAAQjJ,GAEnB,OACE,gCAASsL,O,GAPSjL,aAYlBkL,E,uKAGF,IAAMvH,EAAO,GAWb,OATA3E,KAAKN,MAAMmM,SAAStJ,SAAQ,SAACqH,GAC3BjF,EAAKjC,KACH,kBAAC,EAAD,CACEkH,QAASA,EACTjJ,GAAIiJ,EAAQjJ,SAMhB,kBAACwK,EAAA,EAAD,CAAanG,GAAG,SACd3E,MAAOL,KAAKN,MAAMW,MAClBE,SAAUP,KAAKN,MAAMoM,2BACrB,4BAAQzL,MAAM,GAAG8L,UAAQ,EAACjK,UAAQ,EAACkK,QAAM,GAAzC,sBACCzH,O,GAnBoB3D,a,QC5FvBC,EAAU,IAAIC,IA+BLmL,GA7BM,SAAC,GAAqD,IAAxCC,EAAuC,EAAlDC,UAA8B5I,EAAoB,EAApBA,KAAS6I,EAAW,oCAElEC,EAFkE,4MAItE/K,aAAe,SAAAhC,GAEb,YAAa0B,IADFH,EAAQI,IAAI,UAEd,kBAAC,IAAD,CAAUC,GAAG,WAEb,kBAACgL,EAAD,eAAmB/K,gBAAiB,EAAK7B,MAAM6B,iBAAqBoC,EAAUjE,KATnB,uDAcpE,OACE,kBAAC,IAAD,iBAAW8M,EAAX,CAAiBE,OAAQ1M,KAAK0B,oBAfoC,GAE3CV,aAkB7B,OACE,kBAACwJ,GAAYC,SAAb,MAEI,SAACpK,GAAD,OAAW,kBAACoM,EAAD,CAAgBlL,gBAAiBlB,EAAMkB,sBCxBrCgJ,G,uKAGjB,IAAMoC,EAAc,WAChBC,OAAOC,SAAS,CAACC,IAAK,EAAGC,KAAM,EAAG9C,SAAU,YAGhD,OACE,kBAACO,GAAYC,SAAb,MACI,SAAApK,GAAK,OACJA,EAAMkB,gBAEH,kBAACgK,EAAA,EAAD,CAAQhH,QAAQ,gBAAgB1D,QAAS8L,EAAa7M,UAAU,kBAClE,kBAAC,IAAD,CAAiB0L,KAAMwB,IAAiBC,KAAK,QAF3C,qC,GAX+BjM,aCavCC,GAAU,IAAIC,IACPsJ,GAAchJ,IAAM0L,gBAElB,SAASC,KAMtB,IAAMC,EAAUC,cANY,GAObpM,GAAQI,IAAI,UAIHiM,mBAAS,KAXL,mBAWrBhN,EAXqB,KAWfiN,EAXe,OAYJD,mBAAS,IAZL,mBAYrB7M,EAZqB,KAYf+M,EAZe,OAaJF,mBAAS,IAbL,mBAarBhG,EAbqB,KAafmG,EAbe,OAcAH,mBAAS,IAdT,mBAcrB/F,EAdqB,KAcbmG,EAda,OAecJ,mBAAS,IAfvB,mBAerB9E,EAfqB,KAeNmF,EAfM,OAgBUL,mBAAS,IAhBnB,mBAgBrBvL,EAhBqB,KAgBR6L,EAhBQ,OAiBcN,oBAAS,GAjBvB,mBAiBrBzL,EAjBqB,KAiBNgM,EAjBM,OAkBQP,mBAAS,IAlBjB,mBAkBrBjC,EAlBqB,KAkBTyC,EAlBS,OAmBMR,oBAAS,GAnBf,mBAmBrBrN,EAnBqB,KAmBV8N,EAnBU,OAoBkBT,oBAAS,GApB3B,mBAoBrB/L,EApBqB,KAoBJyM,EApBI,OAqBMV,mBAAS,IArBf,mBAqBrBW,GArBqB,KAqBVC,GArBU,QAsBsBZ,mBAAS,GAtB/B,qBAsBrBa,GAtBqB,MAsBFC,GAtBE,SAuBkBd,mBAAS,IAvB3B,qBAuBrBe,GAvBqB,MAuBJC,GAvBI,SAwBIhB,mBAAS,IAxBb,qBAwBrBhK,GAxBqB,MAwBXiL,GAxBW,SAyBIjB,mBAAS,IAzBb,qBAyBrBzB,GAzBqB,MAyBX2C,GAzBW,SA0BMlB,mBAAS,IA1Bf,qBA0BrBzJ,GA1BqB,MA0BV4K,GA1BU,SA2BoBnB,mBAAS,IA3B7B,qBA2BrBoB,GA3BqB,MA2BHC,GA3BG,SA4BkBrB,mBAAS,IA5B3B,qBA4BrBsB,GA5BqB,MA4BJC,GA5BI,SA6BQvB,mBAAS,IA7BjB,qBA6BrBxF,GA7BqB,MA6BTgH,GA7BS,SA8BYxB,mBAAS,IA9BrB,qBA8BrBtF,GA9BqB,MA8BP+G,GA9BO,SA+BgBzB,mBAAS,IA/BzB,qBA+BrBrF,GA/BqB,MA+BL+G,GA/BK,SAgCgB1B,mBAAS,IAhCzB,qBAgCrBpF,GAhCqB,MAgCL+G,GAhCK,SAiCE3B,oBAAS,GAjCX,qBAiCrBnF,GAjCqB,MAiCZ+G,GAjCY,SAkCQ5B,mBAAS,GAlCjB,qBAkCrBtJ,GAlCqB,MAkCTmL,GAlCS,SAmCc7B,mBAAS,GAnCvB,qBAmCrBjF,GAnCqB,MAmCN+G,GAnCM,SAoCkB9B,mBAAS,GApC3B,qBAoCrBlF,GApCqB,MAoCJiH,GApCI,SAqCkB/B,mBAAS,GArC3B,qBAqCrB7E,GArCqB,MAqCJ6G,GArCI,SAsCchC,mBAAS,GAtCvB,qBAsCrBiC,GAtCqB,MAsCNC,GAtCM,SAuCYlC,mBAAS,GAvCrB,qBAuCrB1E,GAvCqB,MAuCP6G,GAvCO,SAwCsBnC,mBAAS,GAxC/B,qBAwCrBoC,GAxCqB,MAwCFC,GAxCE,SAyCkBrC,mBAAS,GAzC3B,qBAyCrB3F,GAzCqB,MAyCJiI,GAzCI,SA0CsBtC,mBAAS,GA1C/B,qBA0CrB1F,GA1CqB,MA0CFiI,GA1CE,SA2CsBvC,mBAAS,GA3C/B,qBA2CrBzF,GA3CqB,MA2CFiI,GA3CE,MAiDtBtP,GAAsB,SAAA+E,GAC1BgI,EAAQhI,EAAMC,OAAOnF,QAYjBK,GAAkB,SAAA6E,GACtB,IAAIwK,EAAQxK,EAAMC,OAAOnF,MACzBmN,EAAQuC,GAENlC,EADEkC,IAAUhO,IAOVC,GAAyB,SAAAuD,GAC7B,IAAIyK,EAAezK,EAAMC,OAAOnF,MAChCuN,EAAeoC,GAEbnC,EADEmC,IAAiBvP,IAqEvB,SAASwP,KACPL,GAAmB,GACnBC,GAAqB,GACrBC,GAAqB,GACrBL,GAAgB,GAMlB,SAASS,GAAeC,GACtB,IAAIzJ,EAKJ,OAJA9G,QAAQC,IAAI,oBAAsBsQ,GAClCzJ,GAAMyJ,EAAOA,EApJM,SAoJiC,EACpDvQ,QAAQC,IAAI,qBAAuB6G,GAE5BA,EA0CT,SAAS5F,KACPiN,GAAa,GACb,IACMqC,EAAQ,CAAEC,MAAO/P,EAAMgQ,SAAU7P,EAAM8P,YArM3B,mBAsMlBC,IAAMC,KAFOC,wCAEIN,GACdO,MAAK,SAAAC,GACJhR,QAAQC,IAAI+Q,EAAIC,UAChBjR,QAAQC,IAAI,gBACZD,QAAQC,IAAI+Q,EAAIjN,MAChB1C,GAAQ6P,IAAI,SAAUF,EAAIjN,KAAKoN,aAAc,CAAEC,KAAM,MACrD5D,EAAQ6D,QAAQ,KAChB7D,EAAQ8D,GAAG,MAEZC,OAAM,SAAAC,GAEL,GADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,SAIR,OAHAQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,GAGbtR,QAAQC,IAAIuR,EAAMP,UAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,OACzDhE,EAAQ6D,QAAQ,KAChB7D,EAAQ8D,GAAG,MAIjB,SAASvP,KACPoM,GAAa,GAEbyC,IAAMnP,IADOqP,0CAEVC,MAAK,SAAAC,GACJhR,QAAQC,IAAI+Q,EAAIC,UAChBjR,QAAQC,IAAI,iBACZD,QAAQC,IAAI+Q,EAAIjN,MAChB1C,GAAQsQ,OAAO,SAAU,CAAEP,KAAM,MACjC5D,EAAQ6D,QAAQ,KAChB7D,EAAQ8D,GAAG,MAEZC,OAAM,SAAAC,GAEL,GADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,SAIR,OAHAQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,GAGbtR,QAAQC,IAAIuR,EAAMP,UAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,OACzDhE,EAAQ6D,QAAQ,KAChB7D,EAAQ8D,GAAG,MAuOjB,SAASM,KASP,GADA5R,QAAQC,IAAI6O,IACa,KAArBA,GAAJ,CAIAX,GAAa,GACbmB,IAAW,GACX,IAAIuC,GAAoB,EAKxB,QAJgBrQ,IAAZkG,EAAK,KACPmK,EAAmBnK,EAAK,GAAGoK,WAGzBhC,KAAsB+B,EAGxB,OAFA7R,QAAQC,IAAI,sCACZD,QAAQC,IAAI4R,GAQd,IACIE,EAAgB,CAAED,UAAWvD,GAAmByD,SAAUlD,IACxDmD,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAY9D,MAGtCuC,IAAMC,KANOC,oDAMIiB,EAAeE,GAC7BlB,MAAK,SAAAC,GACJhR,QAAQC,IAAI,2BACZD,QAAQC,IAAI+Q,EAAIjN,MAChB,IAAI4D,EAASqJ,EAAIjN,KAAK4D,OAClBD,EAAOsJ,EAAIjN,KAAK2D,KAChB0K,EAAU1K,EAAK6B,OACf8I,EAAY1K,EAAO4B,OACvBiG,GAAiBc,GAAe8B,IAChC3C,GAAmBa,GAAe+B,IAClCxE,EAAQnG,GACRoG,EAAUnG,GACV2H,IAAW,GACXnB,GAAa,MAEdoD,OAAM,SAAAC,GAEL,OADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,UACRQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,IAGiB,MAA1BE,EAAMP,SAASS,QACjBpD,GAAa,IACbd,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,KAGbtR,QAAQC,IAAIuR,EAAMP,UAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,OACzDhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,YA1DbtR,QAAQC,IAAI,wBA8DhB,IAsFMoC,GAAuB,SAAAsD,GAC3B,IAAM+K,EAAW7P,EACXyR,EAAkBnQ,GACxBwD,EAAM4M,iBAEF7B,IAAa4B,GACfrE,GAAiB,IAGjBA,GAAiB,GAxdrB,SAA6BuC,GAE3BI,IAAMC,KADOC,+CACIN,GACdO,MAAK,SAAAC,GACJhR,QAAQC,IAAI+Q,EAAIC,UAChBjR,QAAQC,IAAI,mBACZD,QAAQC,IAAI+Q,EAAIjN,MAChByJ,EAAQ1K,KAAK,KACb0K,EAAQ8D,GAAG,MAEZC,OAAM,SAAAC,GAEL,GADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,SAIR,OAHAQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,GAGbtR,QAAQC,IAAIuR,EAAMP,UAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,UAuc3DgB,CADc,CAAE/B,MAAO/P,EAAMgQ,SAAU7P,EAAM8P,YApoB7B,sBA+0BpB,OAvLA8B,qBAAU,WACa,IAAjBzJ,KACFgH,GAAmBhH,IACnBhJ,QAAQC,IAAI,sBAAwB+I,OAErC,CAACA,KAEJyJ,qBAAU,WACR,IAAIT,EAAWU,aAAaC,QAAQ,wBAChCb,EAAYc,eAAeD,QAAQ,yBACvCb,EAAY/L,SAAS+L,GAErB9R,QAAQC,IAAI,0BACZD,QAAQC,IAAI6R,GACZ9R,QAAQC,IAAI+R,GAEK,OAAbA,IACFA,EAAW,IAETa,MAAMf,KACRA,EAAY,GAGd/C,GAAoBiD,GACpBxD,GAAqBsD,KACpB,IAEHW,qBAAU,WACR,IAAIK,EAASzR,GAAQI,IAAI,UAOP,KAAd4M,SAA+B7M,IAAXsR,IACtB9S,QAAQC,IAAI,eAnchB,WACEkO,GAAa,GACb,IACMqC,EAAQ,CAAEG,YA5PE,mBA6PlBC,IAAMC,KAFOC,uCAEIN,GACdO,MAAK,SAAAC,GACJhR,QAAQC,IAAI+Q,GACZhR,QAAQC,IAAI,eACZqO,GAAa0C,EAAIjN,KAAKgP,aACtB5E,GAAa,GACbC,GAAmB,GACnB/M,GAAQ6P,IAAI,SAAUF,EAAIjN,KAAKoN,aAAc,CAAEC,KAAM,SAEtDG,OAAM,SAAAC,GAGL,GAFAxR,QAAQC,IAAI,kBACZD,QAAQC,IAAIuR,EAAMP,eACKzP,IAAnBgQ,EAAMP,SAIR,OAHAQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,GAGbG,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,OAC3B,MAA1BA,EAAMP,SAASS,QACjBrQ,GAAQsQ,OAAO,aA4anBqB,MAMD,CAAC3E,KAGJoE,qBAAU,WACU,KAAdpE,KACFrO,QAAQC,IAAI,0BAjThB,WACEkO,GAAa,GACb,IACM8D,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAY9D,MAEtCuC,IAAMnP,IAJOqP,oDAIGmB,GACblB,MAAK,SAAAC,GACJhR,QAAQC,IAAI,2BACZD,QAAQC,IAAI+Q,EAAIjN,MAChB8K,GAAamC,EAAIjN,KAAKkP,SACtB9E,GAAa,MAEdoD,OAAM,SAAAC,GAEL,OADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,UACRQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,IAGmB,MAA1BE,EAAMP,SAASS,QACjBpD,GAAa,IACbd,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,KAGftR,QAAQC,IAAIuR,EAAMP,eAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,WAsR3D0B,MAED,CAAC7E,KAEJoE,qBAAU,WACU,KAAdpE,IAA0C,IAAtBE,KACtBvO,QAAQC,IAAI,eACZ2R,QAED,CAACrD,GAAmBF,KAEvBoE,qBAAU,WACU,KAAdpE,IAAsC,IAAlBsB,KACtB3P,QAAQC,IAAI,8BACZ2R,QAED,CAACjC,GAAetB,KAEnBoE,qBAAU,WACU,KAAdpE,IAAyC,KAArBS,KACtB9O,QAAQC,IAAI,uBACZyS,aAAaS,QAAQ,uBAAwBrE,IAC7C8D,eAAeQ,WAAW,yBAC1B/C,KAvXJ,WAEE,GADArQ,QAAQC,IAAI6O,IACa,KAArBA,GAAJ,CAGAX,GAAa,GAGb,IACIkF,EAAa,CAAE5S,MAAOqO,IACpBmD,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAY9D,MAGtCuC,IAAMC,KANOC,mDAMIuC,EAAYpB,GAC1BlB,MAAK,SAAAC,GACJhR,QAAQC,IAAI,yBACZD,QAAQC,IAAI+Q,EAAIjN,MAChB,IAAML,EAAWsN,EAAIjN,KAAKL,SACtBoO,EAAYpO,EAASA,EAAS6F,OAAS,GAAGxI,GACpB,IAAtBwN,IACFC,GAAqBsD,GAEvBnD,GAAYjL,GACZyK,GAAa,MAEdoD,OAAM,SAAAC,GAEL,OADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,UACRQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,IAGiB,MAA1BE,EAAMP,SAASS,QACjBpD,GAAa,IACbd,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,KAGbtR,QAAQC,IAAIuR,EAAMP,eAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,YA+U3D8B,MAED,CAACxE,GAAkBT,KAItBoE,qBAAU,WACU,KAAdpE,IAAyC,KAArBS,KACtB9O,QAAQC,IAAI,uBAlThB,WACE,GAAyB,KAArB6O,GAAJ,CAGAX,GAAa,GACb,IACIkF,EAAa,CAAE5S,MAAOqO,IACpBmD,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAY9D,MAEtCuC,IAAMC,KALOC,sDAKIuC,EAAYpB,GAC1BlB,MAAK,SAAAC,GACJhR,QAAQC,IAAI,4BACZD,QAAQC,IAAI+Q,EAAIjN,MAChB6K,GAAYoC,EAAIjN,KAAKkI,UACrBkC,GAAa,MAEdoD,OAAM,SAAAC,GAEL,OADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,UACRQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,IAGiB,MAA1BE,EAAMP,SAASS,QACjBpD,GAAa,IACbd,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,KAGbtR,QAAQC,IAAIuR,EAAMP,eAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,YAmR3D+B,MAED,CAACzE,GAAkBT,KAEtBoE,qBAAU,gBAQYjR,IAAhBkC,GAAS,IAA0C,IAAtB6K,KAC/BvO,QAAQC,IAAI,wBACZyO,GAAmBhL,GAAS6K,GAAoB,GAAG9N,UAEpD,CAACiD,GAAU6K,KAEdkE,qBAAU,WACkB,IAAtB3C,IACF8C,eAAeO,QAAQ,wBAAyBrD,MAEjD,CAACA,KAEJ2C,qBAAU,WACkB,IAAtBlE,IACFqE,eAAeO,QAAQ,wBAAyB5E,MAEjD,CAACA,KAIJkE,qBAAU,WAIR,GAHAzS,QAAQC,IAAI,2BACZD,QAAQC,IAAIyH,GACZ1H,QAAQC,IAAI6P,SACItO,IAAZkG,EAAK,IAAsC,IAAlBiI,GAAqB,CAChD,GAAIjI,EAAK,GAAGoK,YAAchC,GACxB,OAEF9P,QAAQC,IAAI,uBAvnBhB,SAAyBsQ,GAEvB,GADAvQ,QAAQC,IAAI,sBAAwBsQ,GAChCA,GAAO,EAGT,OAFAjB,IAAW,QACXnB,GAAa,GAGf,IAAIrH,GAAMyJ,EAAOA,EAjKE,SAiKqC,EACxDvQ,QAAQC,IAAI,oBAAsB6G,GAClC+I,GAAgB/I,GAChBwI,IAAW,GACXnB,GAAa,GA+mBXqF,CAFY9L,EAAKiC,MAAM,EAAGgG,GAAgBjI,EAAK,GAAG3G,IAC7BwI,WAGtB,CAACoG,GAAejI,EAAK,KAExB+K,qBAAU,WAER,GAAmB,KAAfvK,IAAyC,KAApB8G,GAAwB,CAC/C,IAAIyE,EAAU,GACd/L,EAAK/E,SAAQ,SAAC1C,GACZ,IAAMyT,EAAUzT,EAAI8J,KACd4J,EAAU1T,EAAIgK,YAAY2J,cAC5BF,IAAYxL,KAA+C,IAAjCyL,EAAQE,QAAQ3L,MAAgE,IAA1CjI,EAAI+J,QAAQ6J,QAAQ7E,KAGxFyE,EAAQ3Q,KAAK7C,MAEf,IAAI6T,EAAY,GAChBnM,EAAOhF,SAAQ,SAAC6O,GACd,IAAMuC,EAAYvC,EAAMzH,KAClBiK,EAAYxC,EAAMvH,YAAY2J,cAChCG,IAAc7L,KAAiD,IAAnC8L,EAAUH,QAAQ3L,MAAkE,IAA5CsJ,EAAMxH,QAAQ6J,QAAQ7E,KAG9F8E,EAAUhR,KAAK0O,MAEjB,IAAIyC,EAAa,GACjBrL,EAAcjG,SAAQ,SAACuR,GACrB,IAAMC,EAAaD,EAAanK,KAC1BqK,EAAaF,EAAajK,YAAY2J,cACxCO,IAAejM,KAAkD,IAApCkM,EAAWP,QAAQ3L,MAAyE,IAAnDgM,EAAalK,QAAQ6J,QAAQ7E,KAGvGiF,EAAWnR,KAAKoR,MAElB,IAAI9B,EAAUqB,EAAQlK,OAClB8K,EAAUP,EAAUvK,OACpB+K,EAAYL,EAAW1K,OAC3BiG,GAAiBc,GAAe8B,IAChC3C,GAAmBa,GAAe+D,IAClC3E,GAAmBY,GAAegE,IAClCnF,GAAgBsE,GAChBrE,GAAkB0E,GAClBzE,GAAkB4E,GAElBjU,QAAQC,IAAI,sBAGb,CAACiI,GAAY8G,GAAiBtH,EAAMC,EAAQiB,IAWvC,kBAAC,IAAD,CAAY4E,QAASA,GAC3B,yBAAKtN,UAAU,OACb,kBAAC0K,GAAY2J,SAAb,CAAsB9T,MAAO,CAAEkB,gBAAiBA,IAC9C,kBAAC,EAAD,CAAQ8J,WAAYA,EAAYD,kBArwBZ,SAAA7F,GAExB,GAA8B,UAA1BA,EAAMC,OAAOC,SAKf,OAJA+J,GAAiB,GACjB7B,EAAiB,IACjBgC,GAAqB,QACrB7B,EAAc,IAIhBA,EAAcvI,EAAMC,OAAOnF,QA4vBrBqL,mBA7PmB,SAACnG,GAC1BwI,GAAa,GACbmB,IAAW,GACX3J,EAAM4M,iBACN,IACMiC,EAAc,CAAExO,KAAMyF,EAAYuG,SAAUlD,IAC5CmD,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAY9D,MAEtCuC,IAAMC,KALOC,4CAKI0D,EAAavC,GAC3BlB,MAAK,SAAAC,GACJhR,QAAQC,IAAI,iBACZD,QAAQC,IAAI+Q,EAAIjN,KAAK2D,MACrB,IAAIA,EAAOsJ,EAAIjN,KAAK2D,KAChB0K,EAAU1K,EAAK6B,OACnBmG,GAAmBY,GAAe8B,IAClCrE,EAAiBrG,GACjByG,GAAa,GACbmB,IAAW,MAEZiC,OAAM,SAAAC,GAGL,GAFAxR,QAAQC,IAAI,kBACZD,QAAQC,IAAIuR,EAAMP,eACKzP,IAAnBgQ,EAAMP,SAIR,OAHAQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,GAGbG,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,OAC3B,MAA1BA,EAAMP,SAASS,QACjBrQ,GAAQsQ,OAAO,cA8NyB8C,oBAxjBhD,WAEE,IAEMxC,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAY9D,MAEtCuC,IAAMC,KALOC,4CACQ,CAAEL,MAAO,SAICwB,GAC5BlB,MAAK,SAAAC,GACJhR,QAAQC,IAAI+Q,EAAIC,UAChBjR,QAAQC,IAAI,kBACZwR,MAAM,iCACNzR,QAAQC,IAAI+Q,EAAIjN,SAEjBwN,OAAM,SAAAC,GAEL,GADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,SAIR,OAHAQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,GAGbtR,QAAQC,IAAIuR,EAAMP,UAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,WAkiBvDxF,sBAvyBsB,SAAArG,GAC5BuJ,GAAcvJ,EAAMC,OAAOnF,OACA,KAAvBkF,EAAMC,OAAOnF,QACf+O,GAAiBc,GAAe5I,EAAK6B,SACrCkG,GAAmBa,GAAe3I,EAAO4B,SACzCmG,GAAmBY,GAAe1H,EAAcW,WAkyBErB,WAAYA,GAC1DgE,0BAhuB0B,SAAAvG,GAChC,GAA8B,WAA1BA,EAAMC,OAAOC,SAMf,OALAoJ,GAAmB,IACnBO,GAAiBc,GAAe5I,EAAK6B,SACrCkG,GAAmBa,GAAe3I,EAAO4B,SACzCmG,GAAmBY,GAAe1H,EAAcW,cAChDvJ,QAAQC,IAAI0F,EAAMC,OAAOC,UAG3B7F,QAAQC,IAAI0F,EAAMC,QAClBqJ,GAAmBtJ,EAAMC,OAAOnF,QAstB4BwL,SAAUA,GAChExL,MAAOuO,KACT,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAc0F,OAAK,EAACtD,KAAK,IACvBrN,KACE,CACE2D,KAAMA,EAAMC,OAAQA,EAAQiB,cAAeA,EAAevI,UAAWA,EAAW6D,kBAAmB4K,GACnG1G,aAAcA,GAAcC,eAAgBA,GAAgBC,eAAgBA,GAAgBrE,UAAWA,GACvGP,SAAUA,GAAUE,sBAAuB6K,GAAiBvG,WAAYA,GAAYC,cAAe6G,GACnGzG,QAASA,GAASE,cAAeA,GAAeD,gBAAiBA,GAAiBK,gBAAiBA,GACnGzE,WAAYA,GAAYsE,aA/1BjB,IA+1B6CK,MAAO4G,GAAe3G,aAAcA,GACxFjB,gBAAiBA,GAAiBC,kBAAmBA,GAAmBC,kBAAmBA,GAC3FL,qBAzNe,SAAC+M,GAC5B3U,QAAQC,IAAI,2BACZ+P,GAAmB2E,IAuNqC9M,uBApN3B,SAAC8M,GAC9B3U,QAAQC,IAAI,6BACZgQ,GAAqB0E,IAkNmF7M,uBA/M3E,SAAC6M,GAC9B3U,QAAQC,IAAI,6BACZiQ,GAAqByE,IA8MT7Q,0BAxwBoB,SAAA6B,GAChC3F,QAAQC,IAAI,oBAAsB0F,GAClC,IAAI5E,EAAKgF,SAASJ,GAMlBkI,EAAQ,IACRwC,KACA7B,GAAqBzN,IA8vB6CoD,2BAzvBjC,SAACwB,GAClC3F,QAAQC,IAAI,qBAAuB0F,GACnC,IAAI5E,EAAKgF,SAASJ,GACdqM,EAAW/N,GAAUlD,EAAK,GAAGN,MACjCT,QAAQC,IAAI,oBAAsB+R,GAClCrD,GAAY,IACZI,GAAoBiD,GACpBtD,GAAmB,IACnBF,GAAqB,IAkvBT7F,eAhuBd,SAAwB7B,GACtByI,GAAczI,IA+tB8BgC,gBAhUtB,SAACnD,GACvBA,EAAM4M,iBACNpE,GAAa,GACbmB,IAAW,GACX,IAAIvG,EAAQpD,EAAMC,OAAOgP,QAAQ7L,MACjC/I,QAAQC,IAAI0F,EAAMC,QAClB5F,QAAQC,IAAI8I,GACZA,EAAQhD,SAASgD,GACjB,IACI8L,EAAa,CAAE9T,GAAIgI,EAAOtI,MAAOqO,IAC/BmD,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAY9D,MAEtCuC,IAAMC,KALOC,8CAKI+D,EAAY5C,GAC1BlB,MAAK,SAAAC,GACJ,IAAMjI,EAAQiI,EAAIjN,KAAK9D,IAAIc,GACrB+Q,EAAYd,EAAIjN,KAAK9D,IAAI6R,UAC/B9R,QAAQC,IAAI,iBACZD,QAAQC,IAAI+Q,EAAIjN,KAAK9D,IAAIc,IACzBf,QAAQC,IAAI6R,GAEZ/B,GAAqB+B,GACrBtD,GAAqBsD,GACrB/D,EAAiB,IACjB6B,GAAiB7G,GACjBwG,GAAc,MAMfgC,OAAM,SAAAC,GAEL,OADAxR,QAAQC,IAAI,uBACWuB,IAAnBgQ,EAAMP,UACRQ,MAAMD,GACNhE,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,IAGiB,MAA1BE,EAAMP,SAASS,QACjBpD,GAAa,IACbd,EAAQ6D,QAAQ,UAChB7D,EAAQ8D,GAAG,KAGbtR,QAAQC,IAAIuR,EAAMP,eAClBQ,MAAMD,EAAMP,SAASS,OAAS,KAAOF,EAAMP,SAASlN,KAAKyN,aAqRrD7E,UAAWnF,IACb,kBAAC,IAAD,CAAOkN,OAAK,EAACtD,KAAK,SAChBtE,OAAQ,kBACN,kBAAC,EAAD,CAAgBpM,KAAMA,EAAMG,KAAMA,EAAMD,oBAAqBA,GAC3DE,gBAAiBA,GAAiBI,kBAAmBA,GACrDb,UAAWA,EAAWsB,gBAAiBA,OAE7C,kBAAC,IAAD,CAAO+S,OAAK,EAACtD,KAAK,UAChBtE,OAAQ,kBACN,kBAAC,EAAD,CAAQ/K,mBAAoBA,GAC1B1B,UAAWA,EAAWsB,gBAAiBA,OAE7C,kBAAC,IAAD,CAAO+S,OAAK,EAACtD,KAAK,gBAChBtE,OAAQ,kBACN,kBAAC,EAAD,CAAUpM,KAAMA,EAAMG,KAAMA,EAC1BsB,YAAaA,EAAaF,cAAeA,EACzCrB,oBAAqBA,GAAqBE,gBAAiBA,GAC3DsB,uBAAwBA,GAAwBC,qBAAsBA,YC14BlEyS,QACW,cAA7B9H,OAAO+H,SAASC,UAEe,UAA7BhI,OAAO+H,SAASC,UAEhBhI,OAAO+H,SAASC,SAASC,MACvB,2DCXNC,IAASpI,OACL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEJqI,SAASC,eAAe,SDwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxE,MAAK,SAAAyE,GACJA,EAAaC,gBAEdlE,OAAM,SAAAC,GACLxR,QAAQwR,MAAMA,EAAMkE,a","file":"static/js/main.f7818f88.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function DotsLoader(props){\r\n\r\n    // var element = (\r\n    //     <span>\r\n    //         <div className=\"bounce1\"></div>\r\n    //         <div className=\"bounce2\"></div>\r\n    //         <div className=\"bounce3\"></div>\r\n    //     </span>    \r\n    // )\r\n\r\n    if (props.color === \"white\" ) {\r\n        console.log(props.color)\r\n        return(\r\n        <div className=\"spinner-white\">\r\n            <div className=\"bounce1\"></div>\r\n            <div className=\"bounce2\"></div>\r\n            <div className=\"bounce3\"></div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    if (props.color === \"blue\" ) {\r\n        console.log(props.color)\r\n        return(\r\n        <div className=\"spinner-blue\">\r\n            <div className=\"bounce1\"></div>\r\n            <div className=\"bounce2\"></div>\r\n            <div className=\"bounce3\"></div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport DotsLoader from './dots.pulse.loader';\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            \r\n                \r\n               \r\n            <div>{this.props.submitted \r\n                 ? <div><DotsLoader color = \"white\"/></div>\r\n                 :<div className=\"auth-wrapper\">\r\n                 <div className=\"auth-inner\">\r\n                 <form>\r\n                    <h3>HSM Wallet Logs Access</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input name=\"user\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\"\r\n                        value={this.props.user} onChange={this.props.handleUsernameInput}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input name=\"pass\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\"\r\n                        value={this.props.pass} onChange={this.props.handlePassInput}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"custom-control custom-checkbox\">\r\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.props.handleLoginSubmit}>Submit</button>\r\n                    <p className=\"forgot-password text-right\">\r\n                        Not registered yet? <a href=\"/#/registration\">Sign up</a>\r\n                    </p>\r\n                </form>\r\n                </div>\r\n                </div>\r\n                }</div>\r\n                \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport LoginComponent from \"./login.component\"\r\nimport Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies()\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n\r\n  render() {\r\n    var cookie = cookies.get('rtoken')\r\n    if (cookie !== undefined) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    return <LoginComponent user={this.props.user} pass={this.props.pass} handleUsernameInput={this.props.handleUsernameInput}\r\n      handlePassInput={this.props.handlePassInput} handleLoginSubmit={this.props.handleLoginSubmit}\r\n      submitted={this.props.submitted} isAuthenticated={this.props.isAuthenticated} />;\r\n  }\r\n}\r\n\r\nexport default (LoginContainer)","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport DotsLoader from './dots.pulse.loader';\r\nimport Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies()\r\n\r\nexport default class Logout extends Component {\r\n\r\n    handleRender = props => {\r\n        var cookie = cookies.get(\"rtoken\")\r\n          if (cookie===undefined) {\r\n            return <Redirect to=\"/\" />\r\n          } else {\r\n            return  <DotsLoader/>\r\n          }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.handleLogoutSubmit()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.handleRender()}\r\n                {/* {this.props.handleLogoutSubmit()} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n{/* <div className=\"auth-wrapper\">\r\n<div className=\"auth-inner\">\r\n<h3>Logout Success</h3>\r\n</div>\r\n</div> */}","import React, { Component } from \"react\";\r\n\r\n\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (<div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <form>\r\n                    <h3> Registration </h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label > Username </label>\r\n                        <input name=\"user\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter username\"\r\n                            value={this.props.user}\r\n                            onChange={this.props.handleUsernameInput}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\" > {this.props.passwordMatch ? <label> Password </label> : <label id=\"passMatch\">Passwords do not match</label >}\r\n                        <input name=\"pass\"\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter password\"\r\n                            value={this.props.pass}\r\n                            onChange={this.props.handlePassInput}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\" >\r\n                        <input name=\"confirmPass\"\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Confirm password\"\r\n                            value={this.props.confirmPass}\r\n                            onChange={this.props.handleConfirmPassInput}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                        onClick={this.props.handleRegisterSubmit}\r\n                        disabled={!this.props.passwordMatch}\r\n                    >\r\n                        Register </button>\r\n                    <p className=\"forgot-password text-right\" >\r\n                        Already registered ? < a href=\"/#/login\" > Sign in </a>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Tab, Nav, Dropdown, NavItem, NavLink } from 'react-bootstrap/'\r\n\r\nexport default class NavTabs extends Component {\r\n\r\n\r\n\r\n  buildTabsRow = () => {\r\n    console.log(\"building nav tabs\")\r\n    var tabsRowElements = []\r\n    this.props.tabsArray.forEach((element, index) => {\r\n      tabsRowElements.push(\r\n        <NavItem onClick={() => this.props.onTabClick(index)}>\r\n          <NavLink eventKey={element}>{element}</NavLink>\r\n        </NavItem>\r\n      )\r\n    })\r\n    return tabsRowElements\r\n  }\r\n\r\n  buildTabsContent = () => {\r\n    console.log(\"building tabs content\")\r\n    var tabsContentElements = []\r\n    const propContent = this.props.contents\r\n\r\n    this.props.tabsArray.forEach((element, index) => {\r\n      tabsContentElements.push(\r\n        <Tab.Pane eventKey={element}>\r\n          {propContent[index]}\r\n        </Tab.Pane>\r\n      )\r\n    })\r\n    return tabsContentElements\r\n  }\r\n\r\n  buildSessionsDropdown = () => {\r\n    if (this.props.sessions === undefined) {\r\n      return null\r\n    }\r\n    var dropdownValue = \"Select session\"\r\n    if (this.props.sessionsDropdownValue !== \"\") {\r\n      dropdownValue = this.props.sessionsDropdownValue\r\n    }\r\n    console.log(\"building dropdown\")\r\n    return (\r\n      <NavItem className=\"ml-auto\">\r\n        <DropdownTabOrderedSelect\r\n          handleSelectChange={this.props.handleSelectSessionChange}\r\n          data={this.props.sessions}\r\n          value={dropdownValue}\r\n        />\r\n      </NavItem>\r\n    )\r\n  }\r\n\r\n  buildFilenamesDropdown = () => {\r\n    if (this.props.filenames === undefined) {\r\n      return null\r\n    }\r\n    var dropdownValue = \"Select Log Name\"\r\n    if (this.props.logsDropdownValue !== \"\") {\r\n      dropdownValue = this.props.logsDropdownValue\r\n    }\r\n    console.log(\"building dropdown\")\r\n    return (\r\n      <NavItem>\r\n        <DropdownTabUnorderedSelect\r\n          handleSelectChange={this.props.handleSelectFilenameChange}\r\n          data={this.props.filenames}\r\n          value={dropdownValue}\r\n        />\r\n      </NavItem>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.currentTab)\r\n    console.log(this.props.tabsArray[this.props.currentTab])\r\n    return (\r\n      <div>\r\n        <Tab.Container id=\"tabs-with-dropdown\" defaultActiveKey={this.props.tabsArray[this.props.currentTab]}>\r\n          <Row className=\"clearfix\">\r\n            <Col sm={12}>\r\n              <Nav variant=\"tabs\" defaultActiveKey={this.props.tabsArray[this.props.currentTab]}>\r\n                {this.buildTabsRow()}\r\n                {this.buildFilenamesDropdown()}\r\n                {this.buildSessionsDropdown()}\r\n              </Nav>\r\n            </Col>\r\n            <Col sm={12}>\r\n              <Tab.Content animation>\r\n                {this.buildTabsContent()}\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nclass DropdownTabOrderedSelect extends Component {\r\n  render() {\r\n\r\n    const rows = [];\r\n\r\n    this.props.data.forEach((d) => {\r\n      const value = d.value;\r\n      var id = 0\r\n      id = d.id;\r\n      rows.push(\r\n        <Dropdown.Item eventKey={id} data-key={id}>{id + \".    \" + value}</Dropdown.Item>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Dropdown as={NavItem} onSelect={this.props.handleSelectChange}>\r\n        <Dropdown.Toggle as={NavLink}>{this.props.value}</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {rows}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nclass DropdownTabUnorderedSelect extends Component {\r\n  render() {\r\n\r\n    const rows = [];\r\n\r\n    this.props.data.forEach((d) => {\r\n      const value = d.value;\r\n      var id = 0\r\n      id = d.id;\r\n      rows.push(\r\n        <Dropdown.Item eventKey={id} data-key={id}>{value}</Dropdown.Item>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Dropdown as={NavItem} onSelect={this.props.handleSelectChange}>\r\n        <Dropdown.Toggle as={NavLink}>{this.props.value}</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          {rows}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport {Pagination} from 'react-bootstrap'\r\nimport PageItem from 'react-bootstrap/PageItem'\r\n\r\n\r\n\r\nexport default class TablePagination extends Component {\r\n\r\n\r\n     handlePageClick = event => {\r\n        if (event.target.nodeName !== 'SPAN') { \r\n           var pageNumber= parseInt(event.target.text) \r\n           this.props.handlePageChange(pageNumber)\r\n        }\r\n      }\r\n  \r\n       handleFirstPageClick = () => {\r\n        this.props.handlePageChange(1)\r\n      }\r\n  \r\n       handleLastPageClick = () => {\r\n        this.props.handlePageChange(this.props.pageCount )\r\n      }\r\n  \r\n       handleForwardClick = () => {\r\n        if (this.props.pageCount > this.props.currentPage) {\r\n          var pageNumber= this.props.currentPage + 1 \r\n          this.props.handlePageChange(pageNumber)\r\n          \r\n        }\r\n      }\r\n  \r\n       handleBackwardsClick = () => {\r\n        if (this.props.currentPage > 1) {\r\n          var pageNumber= this.props.currentPage - 1\r\n          this.props.handlePageChange(pageNumber)\r\n        }\r\n      }\r\n  \r\n       handleFastForwardClick = () => {\r\n        if (this.props.pageCount - this.props.currentPage > 5) {\r\n          var pageNumber= this.props.currentPage + 5\r\n          this.props.handlePageChange(pageNumber)\r\n        }\r\n      }\r\n  \r\n       handleFastBackwardsClick = () => {\r\n        if (this.props.currentPage > 6) {\r\n          var pageNumber= this.props.currentPage - 6 \r\n          this.props.handlePageChange(pageNumber)\r\n        }\r\n      }\r\n\r\n\r\n\r\n      render() {\r\n        const pageCount = this.props.pageCount\r\n        const currentPage = this.props.currentPage\r\n        \r\n        var elements = 0\r\n        var offset = 0\r\n        switch (true) {\r\n            case (pageCount < 25): \r\n                elements = 25\r\n                offset = 12\r\n                break\r\n            case (pageCount > 25 && currentPage < 90): \r\n                elements = 18\r\n                offset = 9\r\n                break\r\n            case (pageCount > 25 && currentPage < 990): \r\n                elements = 14\r\n                offset = 7\r\n                break\r\n            case (currentPage > 1000): \r\n                elements = 12\r\n                offset = 6\r\n                break\r\n            default: {\r\n              elements = 12\r\n              offset = 6\r\n            }\r\n        }        \r\n\r\n        var number = 1\r\n        let items = [];\r\n        for (var i = 1; i <= elements; i++) {\r\n\r\n            if (currentPage > offset && i === 1 && pageCount > 25) {\r\n                items.push(<Pagination.Ellipsis onClick = {this.handleFastBackwardsClick}/>)\r\n                number = currentPage - offset + 1\r\n            }\r\n\r\n            console.log('Default')\r\n            items.push(\r\n            <Pagination.Item key={number} active={number === currentPage} onClick={this.handlePageClick}>\r\n            {number}\r\n            </Pagination.Item>,\r\n            );\r\n            number++\r\n\r\n\r\n            if (pageCount - currentPage > offset && i === elements) {\r\n                items.push(<Pagination.Ellipsis onClick = {this.handleFastForwardClick}/>)\r\n            }\r\n\r\n            if (number > pageCount) {break}             \r\n        }\r\n\r\n\r\n        return (\r\n        <div>\r\n            <Pagination \r\n            // current={this.props.current}\r\n              currentPage={this.props.currentPage}\r\n              total={this.props.pageCount}\r\n            // showLessItems\r\n            // showTitle={false}\r\n            >\r\n                <Pagination.First onClick = {this.handleFirstPageClick}/>\r\n                <Pagination.Prev onClick = {this.handleBackwardsClick}  />\r\n                {items}\r\n                <Pagination.Next onClick = {this.handleForwardClick} />\r\n                <Pagination.Last onClick = {this.handleLastPageClick} />\r\n            </Pagination>  \r\n        </div>\r\n        )\r\n      }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//   Backup if needed to rise CurrentPage state into App\r\n            // const handlePageClick = event => {\r\n            //     if (event.target.nodeName !== 'SPAN') { \r\n            //        setCurrentPage(parseInt(event.target.text))\r\n            //     }\r\n            //   }\r\n          \r\n            //   const handleFirstPageClick = () => {\r\n            //     setCurrentPage(1)\r\n            //   }\r\n          \r\n            //   const handleLastPageClick = () => {\r\n            //     setCurrentPage(logsArrayLenght)\r\n            //   }\r\n          \r\n            //   const handleForwardClick = () => {\r\n            //     if (logsArrayLenght > currentPage) {\r\n            //       setCurrentPage(currentPage + 1)\r\n            //     }\r\n            //   }\r\n          \r\n            //   const handleBackwardsClick = () => {\r\n            //     if (currentPage > 1) {\r\n            //       setCurrentPage(currentPage - 1)\r\n            //     }\r\n            //   }\r\n          \r\n            //   const handleFastForwardClick = () => {\r\n            //     if (logsArrayLenght - currentPage > 5) {\r\n            //       setCurrentPage(currentPage + 5)\r\n            //     }\r\n            //   }\r\n          \r\n            //   const handleFastBackwardsClick = () => {\r\n            //     if (currentPage > 6) {\r\n            //       setCurrentPage(currentPage - 5)\r\n            //     }\r\n            //   }\r\n","import React, { Component } from \"react\";\r\nimport DotsLoader from './dots.pulse.loader'\r\nimport NavTabs from './navtabs.component'\r\nimport TablePagination from './tablePagination.component'\r\n\r\n\r\nexport default class Board extends Component {\r\n  // constructor(props) {\r\n  //   super(props)\r\n  //   this.handleLogsPageChange = this.handleLogsPageChange.bind(this)\r\n  //   this.handleErrorsPageChange = this.handleErrorsPageChange.bind(this)\r\n  //   this.handleSearchPageChange = this.handleSearchPageChange.bind(this)\r\n  //   // this.handleTabClick = this.handleTabClick.bind(this)\r\n  //   this.state = { currentLogsPage: 1, currentErrorsPage: 1, currentSearchPage: 1 }\r\n  // }\r\n\r\n  // handleLogsPageChange(page) {\r\n  //   console.log(\"Setting State Logs Page\")\r\n  //   this.setState({ currentLogsPage: page })\r\n  // }\r\n\r\n  // handleErrorsPageChange(page) {\r\n  //   console.log(\"Setting State Errors Page\")\r\n  //   this.setState({ currentErrorsPage: page })\r\n  // }\r\n\r\n  // handleSearchPageChange(page) {\r\n  //   console.log(\"Setting State Search Page\")\r\n  //   this.setState({ currentSearchPage: page })\r\n  // }\r\n\r\n\r\n\r\n  checkAuth = (props) => {\r\n\r\n    var element = <DotsLoader color=\"white\" />\r\n\r\n    if (this.props.filenames[0] !== undefined) {\r\n      console.log(\"Rendering Filterable Table\")\r\n      element = (<div className='board-inner'>\r\n        <FilterableLogTable\r\n          logs={this.props.logs}\r\n          errors={this.props.errors}\r\n          handleSelectSessionChange={this.props.handleSelectSessionChange}\r\n          handleSelectFilenameChange={this.props.handleSelectFilenameChange}\r\n          handleLogsPageChange = {this.props.handleLogsPageChange}\r\n          handleErrorsPageChange = {this.props.handleErrorsPageChange}\r\n          handleSearchPageChange = {this.props.handleSearchPageChange}\r\n          currentLogsPage={this.props.currentLogsPage}\r\n          currentErrorsPage={this.props.currentErrorsPage}\r\n          currentSearchPage={this.props.currentSearchPage}\r\n          sessions={this.props.sessions}\r\n          logsDropdownValue={this.props.logsDropdownValue}\r\n          sessionsDropdownValue={this.props.sessionsDropdownValue}\r\n          filterText={this.props.filterText}\r\n          filterService={this.props.filterService}\r\n          filteredLogs={this.props.filteredLogs}\r\n          filteredErrors={this.props.filteredErrors}\r\n          filteredSearch={this.props.filteredSearch}\r\n          loading={this.props.loading}\r\n          errorsPageCount={this.props.errorsPageCount}\r\n          logsPageCount={this.props.logsPageCount}\r\n          itemsPerPage={this.props.itemsPerPage}\r\n          currentTab={this.props.currentTab}\r\n          handleTabClick={this.props.handleTabClick}\r\n          searchResults={this.props.searchResults}\r\n          searchPageCount={this.props.searchPageCount}\r\n          handleLinkClick={this.props.handleLinkClick}\r\n          logId={this.props.logId}\r\n          searchedPage={this.props.searchedPage}\r\n          filenames={this.props.filenames}\r\n        />\r\n      </div>)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {element}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(\"Rendering Board\")\r\n    return (\r\n      this.checkAuth()\r\n    )\r\n  }\r\n}\r\n\r\nclass FilterableLogTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  tabsArray = [\"Logs\", \"Errors\"]\r\n  firstTab = \"Logs\"\r\n  secondTab = \"Errors\"\r\n\r\n \r\n\r\n  toggleAnimation = () => {\r\n    // var elements = []\r\n    // this.tabsArray.forEach(() => {\r\n    //   elements.push(<DotsLoader color=\"blue\" />)\r\n    // });\r\n    // console.log(\"building blue loader\")\r\n    // //var elements = [<DotsLoader color = \"blue\"/>]\r\n\r\n    if (this.props.loading === true) {\r\n      return (<DotsLoader color=\"blue\" />)\r\n    }\r\n\r\n    var elements = []\r\n    console.log(\"passing content into tabs\")\r\n    elements.push(\r\n      <div>\r\n        <TablePagination\r\n          currentPage={this.props.currentLogsPage}\r\n          pageCount={this.props.logsPageCount}\r\n          handlePageChange={this.props.handleLogsPageChange}\r\n        />\r\n        <LogTable\r\n          names={NAMES}\r\n          logs={this.props.logs}\r\n          itemsPerPage={this.props.itemsPerPage}\r\n          currentPage={this.props.currentLogsPage}\r\n          filterText={this.props.filterText}\r\n          filterService={this.props.filterService}\r\n          filteredLogs={this.props.filteredLogs}\r\n          handleLinkClick={this.props.handleLinkClick}\r\n          logId={this.props.logId}\r\n        />\r\n        <TablePagination\r\n          currentPage={this.props.currentLogsPage}\r\n          pageCount={this.props.logsPageCount}\r\n          handlePageChange={this.props.handleLogsPageChange}\r\n        />\r\n      </div>\r\n    )\r\n\r\n    elements.push(\r\n      <div>\r\n        <TablePagination\r\n          currentPage={this.props.currentErrorsPage}\r\n          pageCount={this.props.errorsPageCount}\r\n          handlePageChange={this.props.handleErrorsPageChange}\r\n        />\r\n        <LogTable\r\n          names={NAMES}\r\n          logs={this.props.errors}\r\n          itemsPerPage={this.props.itemsPerPage}\r\n          currentPage={this.props.currentErrorsPage}\r\n          filterText={this.props.filterText}\r\n          filterService={this.props.filterService}\r\n          filteredLogs={this.props.filteredErrors}\r\n          handleLinkClick={this.props.handleLinkClick}\r\n          logId={this.props.logId}\r\n        />\r\n        <TablePagination\r\n          currentPage={this.props.currentErrorsPage}\r\n          pageCount={this.props.errorsPageCount}\r\n          handlePageChange={this.props.handleErrorsPageChange}\r\n        />\r\n\r\n      </div>\r\n    )\r\n\r\n\r\n    if (this.props.searchResults !== undefined && (this.props.searchResults).length !== 0) {\r\n      console.log(\"Searching...\")\r\n      console.log(this.props.searchResults)\r\n      return (\r\n        <div>\r\n          <TablePagination\r\n            currentPage={this.props.currentSearchPage}\r\n            pageCount={this.props.searchPageCount}\r\n            handlePageChange={this.props.handleSearchPageChange}\r\n          />\r\n          <LogTable\r\n            names={NAMES}\r\n            logs={this.props.searchResults}\r\n            itemsPerPage={this.props.itemsPerPage}\r\n            currentPage={this.props.currentSearchPage}\r\n            filterText={this.props.filterText}\r\n            filterService={this.props.filterService}\r\n            filteredSearch={this.props.filteredSearch}\r\n            handleLinkClick={this.props.handleLinkClick}\r\n            logId={this.props.logId}\r\n          />\r\n          <TablePagination\r\n            currentPage={this.props.currentSearchPage}\r\n            pageCount={this.props.searchPageCount}\r\n            handlePageChange={this.props.handleSearchPageChange}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      console.log(\"building NAVTABS\")\r\n      return (\r\n\r\n        <NavTabs\r\n          tabsArray={this.tabsArray}\r\n          handleSelectSessionChange={this.props.handleSelectSessionChange}\r\n          handleSelectFilenameChange={this.props.handleSelectFilenameChange}\r\n          sessions={this.props.sessions}\r\n          filenames={this.props.filenames}\r\n          logsDropdownValue={this.props.logsDropdownValue}\r\n          sessionsDropdownValue={this.props.sessionsDropdownValue}\r\n          contents={elements}\r\n          onTabClick={this.props.handleTabClick}\r\n          currentTab={this.props.currentTab}\r\n        />\r\n\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      this.toggleAnimation()\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass LogTable extends Component {\r\n\r\n\r\n  render() {\r\n\r\n\r\n    const filterText = this.props.filterText;\r\n    const filterService = this.props.filterService\r\n\r\n    var i = 0\r\n    const rows = [];\r\n    var itemsPerPage = this.props.itemsPerPage\r\n    var currentPage = this.props.currentPage\r\n\r\n    let lastItem = currentPage * itemsPerPage\r\n    let firstItem = (currentPage - 1) * itemsPerPage\r\n\r\n\r\n    if (filterText === \"\" && filterService === \"\") {\r\n      let logs = this.props.logs\r\n      let slice = logs.slice(firstItem, lastItem)\r\n      slice.forEach((log) => {\r\n        rows.push(\r\n          <LogRow\r\n            handleLinkClick={this.props.handleLinkClick}\r\n            logId={this.props.logId}\r\n            log={log}\r\n            key={log.id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    if (this.props.filteredLogs !== undefined) {\r\n      var filteredLogs = this.props.filteredLogs\r\n      let slice = filteredLogs.slice(firstItem, lastItem)\r\n      slice.forEach((log) => {\r\n        rows.push(\r\n          <LogRow\r\n            logId={this.props.logId}\r\n            handleLinkClick={this.props.handleLinkClick}\r\n            log={log}\r\n            key={log.id}\r\n\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    if (this.props.filteredSearch !== undefined) {\r\n      var filteredSearch = this.props.filteredSearch\r\n      let slice = filteredSearch.slice(firstItem, lastItem)\r\n      slice.forEach((log) => {\r\n        rows.push(\r\n          <LogRow\r\n            logId={this.props.logId}\r\n            handleLinkClick={this.props.handleLinkClick}\r\n            log={log}\r\n            key={log.id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td id=\"datecol\">Date</td>\r\n            <td id=\"servcol\">Service</td>\r\n            <td id=\"desccol\">Desription</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass LogRow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.scrollRef = React.createRef()\r\n  }\r\n\r\n  render() {\r\n\r\n    const scrollTo = (ref) => {\r\n      if (ref /* + other conditions */) {\r\n        ref.scrollIntoView({ behavior: 'smooth', block: 'center' })\r\n      }\r\n    }\r\n\r\n    //<div ref={scrollTo}>Item</div>\r\n    const log = this.props.log\r\n    const id = log.id\r\n    const date = log.date;\r\n    const service = log.service;\r\n    const description = log.description;\r\n    const link = \"http://localhost:5000/v2/private/getLogById?id=\" + id\r\n\r\n    if (log.id === this.props.logId) {\r\n      console.log(\"Found log\")\r\n      return (\r\n        <tr className=\"selectedRow\" ref={scrollTo}>\r\n          <td id=\"datecol\"><a href={link} onClick={this.props.handleLinkClick} data-log-id={id}>{date}</a></td>\r\n          <td id=\"servcol\">{service}</td>\r\n          <td id=\"desccol\">{description}</td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <tr>\r\n        <td id=\"datecol\"><a href={link} onClick={this.props.handleLinkClick} data-log-id={id}  className=\"table-link\">{date}</a></td>\r\n        <td id=\"servcol\">{service}</td>\r\n        <td id=\"desccol\">{description}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass SelectRow extends Component {\r\n  render() {\r\n    const session = this.props.session\r\n    const dates = session.dates;\r\n    var id = 0\r\n    id = session.id;\r\n\r\n    return (\r\n      <option data-key={id}>{id + \".    \" + dates}</option>\r\n    );\r\n  }\r\n}\r\n\r\nclass DropdownSelect extends Component {\r\n  render() {\r\n\r\n    const rows = [];\r\n\r\n    this.props.sessions.forEach((session) => {\r\n      rows.push(\r\n        <SelectRow\r\n          session={session}\r\n          key={session.id}\r\n          id={session.id}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"filter-component\">\r\n        <select\r\n          value={this.props.value}\r\n          onChange={this.props.handleSelectSessionChange}>\r\n          <option value=\"\" selected disabled hidden>Select session</option>\r\n          {rows}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n{/* <NavDropdown eventKey=\"3\" title={this.props.value} id=\"nav-dropdown-within-tab\" onSelect={this.props.handleSelectSessionChange}>\r\n          {rows}\r\n        </NavDropdown>  */}\r\n\r\n\r\n\r\nconst NAMES = { id: 0, date: \"Date\", service: \"Source\", description: \"Description\" }\r\n  // class SearchBar extends Component {\r\n  //   constructor(props) {\r\n  //     super(props);\r\n  //     this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n  //   }\r\n\r\n  //   handleFilterTextChange(e) {\r\n  //     this.props.handleFilterTextChange(e.target.value);\r\n  //   }\r\n\r\n\r\n  //   render() {\r\n  //     return (\r\n  //       <div className=\"filter-component\">\r\n  //       <DropdownSelect\r\n  //           handleSelectSessionChange = {this.props.handleSelectSessionChange}\r\n  //           sessions = {this.props.sessions}\r\n  //           value = {this.props.value}\r\n  //         />\r\n  //       <form id=\"board-filter\"> \r\n  //         <input\r\n  //           type=\"text\"\r\n  //           placeholder=\"Filter\"\r\n  //           value={this.props.filterText}\r\n  //           onChange={this.handleFilterTextChange}\r\n  //         />\r\n  //       </form>\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // class FilterableLogTable extends Component {\r\n  //   constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {\r\n  //       filterText: ''\r\n  //     };\r\n\r\n\r\n  //     this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n  //   }\r\n\r\n  //   handleFilterTextChange(filterText) {\r\n  //     this.setState({\r\n  //       filterText: filterText\r\n  //     });\r\n  //   }\r\n\r\n  //   render() {\r\n  //     return (\r\n  //       <div>\r\n  //         <SearchBar\r\n  //         handleSelectSessionChange = {this.props.handleSelectSessionChange}\r\n  //         sessions = {this.props.sessions}\r\n  //         value = {this.props.value}\r\n  //         filterText={this.state.filterText}\r\n  //         handleFilterTextChange={this.handleFilterTextChange}\r\n  //         />\r\n  //         <LogTable\r\n  //           names = {NAMES}\r\n  //           logs={this.props.logs}\r\n  //           filterText={this.state.filterText}\r\n  //         />\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n//   ReactDOM.render(\r\n//     <FilterableProductTable products={PRODUCTS} />,\r\n//     document.getElementById('container')\r\n//   );","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, Form, FormControl, Button, InputGroup } from \"react-bootstrap\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { AuthContext } from '../App'\r\n\r\nexport default class NavbarContainer extends Component {\r\n  render() {\r\n    return (\r\n      <AuthContext.Consumer>\r\n        { value =>\r\n          !value.isAuthenticated\r\n            ? <div></div>\r\n            : <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\" expand=\"lg\" className=\"navbar\" >\r\n              <Nav className=\"col mr-4 justify-content-start\">\r\n                <Navbar.Brand href=\"/\">HSM Logs</Navbar.Brand>\r\n              </Nav>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"col-auto justify-content-space-between\">\r\n                  <Form className=\"search-bar\">\r\n                    <InputGroup className=\"nav-group\">\r\n                      <FormControl\r\n                        onChange={this.props.handleSearchInput}\r\n                        value={this.props.searchText}\r\n                        type=\"text\"\r\n                        placeholder=\"Search All\"\r\n                        className=\"nav-form\"\r\n                      />\r\n                      <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary\" onClick={this.props.handleSearchInput} type=\"button\" className=\"nav-btn-middle\">\r\n                          <FontAwesomeIcon icon={faTimesCircle} />\r\n                        </Button>\r\n                        <Button onClick={this.props.handleSearchSubmit} variant=\"outline-secondary\" className=\"nav-btn\" type=\"submit\">\r\n                          Search\r\n                    </Button>\r\n                      </InputGroup.Append>\r\n                    </InputGroup>\r\n                  </Form>\r\n                </Nav>\r\n                <Nav classname=\"col-auto justify-content-space-between\">\r\n                  <Form className=\"nav-filter\">\r\n                    <FormControl\r\n                      onChange={this.props.handleFilterTextInput}\r\n                      value={this.props.filterText}\r\n                      type=\"text\"\r\n                      placeholder=\"Filter...\"\r\n                      className=\"nav-form col-auto\"\r\n                    />\r\n                  </Form>\r\n                </Nav>\r\n                <Nav classname=\"col-8 justify-content-space-between\">\r\n                  <Form className=\"nav-dropdown\">\r\n                    <InputGroup>\r\n                      <DropdownSelect\r\n                        services={this.props.services}\r\n                        value={this.props.value}\r\n                        handleSelectServiceChange={this.props.handleSelectServiceChange}\r\n                        class=\"dropdown\"\r\n                      />\r\n                      <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary\" onClick={this.props.handleSelectServiceChange} className=\"nav-btn-middle\">\r\n                          <FontAwesomeIcon icon={faTimesCircle} />\r\n                        </Button>\r\n                      </InputGroup.Append>\r\n                    </InputGroup>\r\n                  </Form>\r\n                </Nav>\r\n                <Nav className=\"col justify-content-end\">\r\n                  <Nav.Link href=\"/#/logout\">Logout</Nav.Link>\r\n                  {/* </Nav> */}\r\n                  {/* <Nav className=\"col-md-3 ml-auto\">\r\n                        <Nav.Link href=\"/login\">Logout</Nav.Link>\r\n                        <Nav.Link href=\"/register\">Register</Nav.Link>\r\n                  </Nav> */}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n        }\r\n      </AuthContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass SelectRow extends Component {\r\n  render() {\r\n    const service = this.props.service\r\n    const serviceInfo = service.service;\r\n    const id = service.id;\r\n\r\n    return (\r\n      <option>{serviceInfo}</option>\r\n    );\r\n  }\r\n}\r\n\r\nclass DropdownSelect extends Component {\r\n  render() {\r\n\r\n    const rows = [];\r\n\r\n    this.props.services.forEach((service) => {\r\n      rows.push(\r\n        <SelectRow\r\n          service={service}\r\n          id={service.id}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FormControl as=\"select\"\r\n        value={this.props.value}\r\n        onChange={this.props.handleSelectServiceChange}>\r\n        <option value=\"\" selected disabled hidden>Filter services...</option>\r\n        {rows}\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport Cookies from 'universal-cookie'\r\nimport { AuthContext } from '../App'\r\n\r\nconst cookies = new Cookies()\r\n\r\nconst PrivateRoute = ({ component: ComposedComponent, data, ...rest }) => {\r\n\r\n  class Authentication extends Component {\r\n\r\n    handleRender = props => {\r\n    var cookie = cookies.get(\"rToken\")\r\n      if (cookie===undefined) {\r\n        return <Redirect to=\"/login\" />\r\n      } else {\r\n        return <ComposedComponent isAuthenticated={this.props.isAuthenticated} {...data} {...props} />\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Route {...rest} render={this.handleRender} />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Consumer>\r\n      {\r\n        (value) => <Authentication isAuthenticated={value.isAuthenticated} />\r\n      }\r\n    </AuthContext.Consumer>\r\n  )\r\n};\r\n\r\nexport default PrivateRoute","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { faArrowCircleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { AuthContext } from '../App'\r\n\r\nexport default class NavbarContainer extends Component {\r\n  render() {\r\n\r\n    const scrollToTop = () => {\r\n        window.scrollTo({top: 0, left: 0, behavior: 'smooth'})\r\n    }\r\n\r\n    return (\r\n      <AuthContext.Consumer>\r\n        { value =>\r\n          !value.isAuthenticated\r\n            ? <div></div>\r\n            : <Button variant=\"outline-light\" onClick={scrollToTop} className=\"nav-to-top-btn\">\r\n            <FontAwesomeIcon icon={faArrowCircleUp} size=\"2x\" />\r\n          </Button>\r\n        }\r\n        </AuthContext.Consumer>\r\n    )\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Switch, Route, useHistory } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\"\nimport axios from \"axios\"\n\n\n\nimport LoginContainer from \"./components/LoginContainer\";\nimport Logout from \"./components/logout.component\"\nimport Register from \"./components/register.component\";\nimport Board from \"./components/board.component\"\nimport Navbar from \"./components/navbar.component\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ScrollButton from \"./components/scrollToTopButton.component\"\n//import { render } from '@testing-library/react';\n\nconst serverUrl = \"http://localhost:5000\"\nconst cookies = new Cookies()\nexport const AuthContext = React.createContext()\n\nexport default function App() {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {user: \"\", pass: \"\", confirmPass: \"\", passwordMatch: true, searchText: \"\", submitted: false};\n  // }\n\n  const history = useHistory()\n  const cookie = cookies.get(\"rToken\");\n  const fingerprint = \"kvueijn37472sd2\"\n  const ItemsPerPage = 200\n\n  const [user, setUser] = useState(\"\")\n  const [pass, setPass] = useState(\"\")\n  const [logs, setLogs] = useState([])\n  const [errors, setErrors] = useState([])\n  const [searchResults, setSearchResults] = useState([])\n  const [confirmPass, setConfirmPass] = useState(\"\")\n  const [passwordMatch, setPasswordMatch] = useState(true)\n  const [searchText, setSearchText] = useState(\"\")\n  const [submitted, setSubmitted] = useState(false)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [authToken, setAuthToken] = useState(\"\") //TODO keep authToken hashed\n  const [selectedSessionId, setSelectedSessionId] = useState(0)\n  const [selectedSession, setSelectedSession] = useState(\"\")\n  const [sessions, setSessions] = useState([])\n  const [services, setServices] = useState([])\n  const [filenames, setFilenames] = useState([])\n  const [selectedFilename, setSelectedFilename] = useState(\"\")\n  const [selectedService, setSelectedService] = useState(\"\")\n  const [filterText, setFilterText] = useState(\"\")\n  const [filteredLogs, setFilteredLogs] = useState([])\n  const [filteredErrors, setFilteredErrors] = useState([])\n  const [filteredSearch, setFilteredSearch] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [currentTab, setCurrentTab] = useState(0)\n  const [logsPageCount, setLogsPageCount] = useState(0)\n  const [errorsPageCount, setErrorsPageCount] = useState(0)\n  const [searchPageCount, setSearchPageCount] = useState(0)\n  const [selectedLogId, setSelectedLogId] = useState(0)\n  const [searchedPage, setSearchedPage] = useState(0)\n  const [searchedSessionId, setSearchedSessionId] = useState(0) //TODO check if needed (store in session)\n  const [currentLogsPage, setCurrentLogsPage] = useState(1)\n  const [currentErrorsPage, setCurrentErrorsPage] = useState(1)\n  const [currentSearchPage, setCurrentSearchPage] = useState(1)\n\n  // TODO Add aToken validity Check\n\n\n\n  const handleUsernameInput = event => {\n    setUser(event.target.value);\n  }\n\n  const handleFilterTextInput = event => {\n    setFilterText(event.target.value);\n    if (event.target.value === \"\") {\n      setLogsPageCount(getTotalLength(logs.length))\n      setErrorsPageCount(getTotalLength(errors.length))\n      setSearchPageCount(getTotalLength(searchResults.length))\n    }\n  }\n\n  const handlePassInput = event => {\n    let passV = event.target.value;\n    setPass(passV);\n    if (passV !== confirmPass) {\n      setPasswordMatch(false)\n    }\n    else {\n      setPasswordMatch(true)\n    }\n  }\n  const handleConfirmPassInput = event => {\n    let confirmPassV = event.target.value;\n    setConfirmPass(confirmPassV);\n    if (confirmPassV !== pass) {\n      setPasswordMatch(false)\n    }\n    else {\n      setPasswordMatch(true)\n    }\n  }\n\n\n\n  const handleSearchInput = event => {\n\n    if (event.target.nodeName !== 'INPUT') {\n      setSelectedLogId(0)\n      setSearchResults([])\n      setSearchedSessionId(0)\n      setSearchText(\"\")\n      return\n    }\n\n    setSearchText(event.target.value)\n  }\n\n\n  const handleSelectSessionChange = event => {\n    console.log('selected session ' + event)\n    var id = parseInt(event)\n    // const selectedIndex = event.target.options.selectedIndex;\n    // var id = parseInt(event.target.options[selectedIndex].getAttribute('data-key'))\n    // setselectedSessionId(id);\n    // setSelectedSession(event.target.value)\n    //setSearchedSessionId(0)  //TODO check if needed to set back\n    setLogs([])\n    resetPagination()\n    setSelectedSessionId(id);\n    //setSelectedSession(sessions[id - 1].value)\n    //handleGetLogsBySession(selectedSessionId)\n  }\n\n  const handleSelectFilenameChange = (event) => {\n    console.log(\"selected logfileId\" + event)\n    let id = parseInt(event)\n    let filename = filenames[id - 1].value\n    console.log(\"Selected Filename\" + filename)\n    setSessions([])\n    setSelectedFilename(filename)\n    setSelectedSession(\"\")\n    setSelectedSessionId(0)\n  }\n\n  const handleSelectServiceChange = event => {\n    if (event.target.nodeName !== 'SELECT') {\n      setSelectedService(\"\")\n      setLogsPageCount(getTotalLength(logs.length))\n      setErrorsPageCount(getTotalLength(errors.length))\n      setSearchPageCount(getTotalLength(searchResults.length))\n      console.log(event.target.nodeName)\n      return\n    }\n    console.log(event.target)\n    setSelectedService(event.target.value)\n  }\n\n\n\n  function handleTabClick(i) {\n    setCurrentTab(i)\n  }\n\n  function resetPagination() {\n    setCurrentLogsPage(1)\n    setCurrentErrorsPage(1)\n    setCurrentSearchPage(1)\n    setSearchedPage(0)\n  }\n\n\n\n\n  function getTotalLength(len) {\n    let i = 0\n    console.log('Total Logs count ' + len)\n    i = ((len - (len % ItemsPerPage)) / ItemsPerPage) + 1\n    console.log('Total Pages Count ' + i)\n\n    return i\n  }\n\n  function getSearchedPage(len) {\n    console.log(\"Calculating slice: \" + len)\n    if (len <= 0) {\n      setLoading(false)\n      setSubmitted(false)\n      return\n    }\n    let i = ((len - (len % ItemsPerPage)) / ItemsPerPage) + 1\n    console.log(\"Calculated page: \" + i)\n    setSearchedPage(i)\n    setLoading(false)\n    setSubmitted(false)\n  }\n\n\n\n  function SendRegisterRequest(input) {\n    const path = serverUrl + '/v2/registrationAttempt'\n    axios.post(path, input)\n      .then(res => {\n        console.log(res.response)\n        console.log('RegisterSuccess')\n        console.log(res.data)\n        history.push('/')\n        history.go(0)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n      })\n  }\n\n  function handleLoginSubmit() {\n    setSubmitted(true)\n    const path = serverUrl + '/v2/loginAttempt'\n    const input = { login: user, password: pass, fingerprint: fingerprint };\n    axios.post(path, input)\n      .then(res => {\n        console.log(res.response)\n        console.log('LoginSuccess')\n        console.log(res.data)\n        cookies.set(\"rToken\", res.data.refreshToken, { path: '/' })\n        history.replace('/')\n        history.go(0)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n        history.replace('/')\n        history.go(0)\n      })\n  }\n\n  function handleLogoutSubmit() {\n    setSubmitted(true)\n    const path = serverUrl + '/v2/logoutAttempt'\n    axios.get(path)\n      .then(res => {\n        console.log(res.response)\n        console.log('LogoutSuccess')\n        console.log(res.data)\n        cookies.remove(\"rToken\", { path: '/' })\n        history.replace('/')\n        history.go(0)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n        history.replace('/')\n        history.go(0)\n      })\n  }\n\n  function handleAuthSubmit() {\n    setSubmitted(true)\n    const path = serverUrl + '/v2/authAttempt'\n    const input = { fingerprint: fingerprint };\n    axios.post(path, input)\n      .then(res => {\n        console.log(res)\n        console.log('AuthSuccess')\n        setAuthToken(res.data.accessToken)\n        setSubmitted(false)\n        setIsAuthenticated(true)\n        cookies.set(\"rToken\", res.data.refreshToken, { path: '/' })\n      })\n      .catch(error => {\n        console.log('Catching error')\n        console.log(error.response)\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        alert(error.response.status + ': ' + error.response.data.error)\n        if (error.response.status === 403) {\n          cookies.remove(\"rToken\")\n        }\n        // history.replace('/') // Check if needed\n        // history.go(0)\n\n      })\n  }\n\n\n\n  function handleUnblockSubmit() {\n    //setSubmitted(true)\n    const path = serverUrl + '/v2/private/unblock/'\n    const unblockInput = { login: \"test5\" };\n    const config = {\n      headers: { Authorization: `Bearer ${authToken}` }\n    };\n    axios.post(path, unblockInput, config)\n      .then(res => {\n        console.log(res.response)\n        console.log('UnblockSuccess')\n        alert(\"User is successfuly unblocked\")\n        console.log(res.data)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n      })\n  }\n\n  function handleUNSECUREDGetLogsSubmit() {\n    setSubmitted(true)\n    const path = serverUrl + '/v2/getLogs'\n    //   const config = {\n    //     headers: { Authorization: `Bearer ${authToken}` }\n    // };\n    //const input = {login: user, password: pass, fingerprint:fingerprint};\n    axios.get(path)\n      .then(res => {\n        console.log('GetLogsSuccess')\n        console.log(res.data)\n        //cookies.set(\"rToken\", res.data.refreshToken, {path: '/'})\n        setLogs(res.data.logs)\n        //setSubmitted(false)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n      })\n  }\n\n  function handleGetLogsSubmit() {\n    setSubmitted(true)\n    const path = serverUrl + '/v2/private/getLogs'\n    const config = {\n      headers: { Authorization: `Bearer ${authToken}` }\n    };\n    //const input = {login: user, password: pass, fingerprint:fingerprint};\n    axios.get(path, config)\n      .then(res => {\n        console.log('GetLogsSuccess')\n        console.log(res.data)\n        setLogs(res.data.logs)\n        setSubmitted(false)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n      })\n  }\n\n\n\n  function handleGetLogsSessions() {\n    console.log(selectedFilename)\n    if (selectedFilename === \"\") {\n      return\n    }\n    setSubmitted(true)\n\n    //const logFilename = localStorage.getItem(\"lastSelectedFilename\")\n    const path = serverUrl + '/v2/private/getLogsSessions'\n    var logsInputs = { value: selectedFilename }\n    const config = {\n      headers: { Authorization: `Bearer ${authToken}` }\n    };\n    //const input = {login: user, password: pass, fingerprint:fingerprint};\n    axios.post(path, logsInputs, config)\n      .then(res => {\n        console.log('GetLogSessionsSuccess')\n        console.log(res.data)\n        const sessions = res.data.sessions\n        var sessionId = sessions[sessions.length - 1].id\n        if (selectedSessionId === 0) {\n          setSelectedSessionId(sessionId)\n        }\n        setSessions(sessions)\n        setSubmitted(false)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        if (error.response.status === 401) {\n          setAuthToken(\"\")\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n      })\n  }\n\n\n  function handleGetLogsFilenames() {\n    setSubmitted(true)\n    const path = serverUrl + '/v2/private/getLogsFilenames'\n    const config = {\n      headers: { Authorization: `Bearer ${authToken}` }\n    };\n    axios.get(path, config)\n      .then(res => {\n        console.log('GetLogsFilenamesSuccess')\n        console.log(res.data)\n        setFilenames(res.data.results)\n        setSubmitted(false)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n          if (error.response.status === 401) {\n            setAuthToken(\"\")\n            history.replace('/')\n            history.go(0)\n            return\n          }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n      })\n  }\n\n  function handleGetLogServiceInfo() {\n    if (selectedFilename === \"\") {\n      return\n    }\n    setSubmitted(true)\n    const path = serverUrl + '/v2/private/getLogsServiceInfo'\n    var logsInputs = { value: selectedFilename }\n    const config = {\n      headers: { Authorization: `Bearer ${authToken}` }\n    };\n    axios.post(path, logsInputs, config)\n      .then(res => {\n        console.log('GetLogServiceInfoSuccess')\n        console.log(res.data)\n        setServices(res.data.services)\n        setSubmitted(false)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        if (error.response.status === 401) {\n          setAuthToken(\"\")\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n      })\n  }\n\n\n  function handleGetLogsBySession() {\n    // let sessionId = localStorage.getItem(\"lastSelectedSession\")\n    // sessionId = parseInt(sessionId)\n    // const logFilename = localStorage.getItem(\"lastSelectedFilename\")\n    // if (logFilename === null) {\n    //   return\n    // }\n\n    console.log(selectedFilename)\n    if (selectedFilename === \"\") {\n      console.log(\"No filename selected\")\n      return\n    }\n    setSubmitted(true)\n    setLoading(true)\n    var currentSessionId = -1\n    if (logs[0] !== undefined) {\n      currentSessionId = logs[0].sessionId\n    }\n\n    if (searchedSessionId === currentSessionId) {\n      console.log(\"Searching in the SAME session\")\n      console.log(currentSessionId)\n      return\n    }\n    // if (searchedSessionId !== 0) {\n    //   console.log(\"Searching in ANOTHER same session\")\n    //   sessionId = searchedSessionId\n    // }\n    //setSearchedPage(0)\n    const path = serverUrl + '/v2/private/getLogsBySession'\n    var sessionInputs = { sessionId: selectedSessionId, filename: selectedFilename }\n    const config = {\n      headers: { Authorization: `Bearer ${authToken}` }\n    };\n    //const input = {login: user, password: pass, fingerprint:fingerprint};\n    axios.post(path, sessionInputs, config)\n      .then(res => {\n        console.log('GetLogsBySessionSuccess')\n        console.log(res.data)\n        var errors = res.data.errors\n        var logs = res.data.logs\n        var lenLogs = logs.length\n        var lenErrors = errors.length\n        setLogsPageCount(getTotalLength(lenLogs))\n        setErrorsPageCount(getTotalLength(lenErrors))\n        setLogs(logs)\n        setErrors(errors)\n        setLoading(false)\n        setSubmitted(false)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        if (error.response.status === 401) {\n          setAuthToken(\"\")\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n        history.replace('/') // make it for unautorized/ \n        history.go(0)\n      })\n  }\n\n  const handleLinkClick = (event) => {\n    event.preventDefault()\n    setSubmitted(true)\n    setLoading(true)\n    var logId = event.target.dataset.logId\n    console.log(event.target)\n    console.log(logId)\n    logId = parseInt(logId)\n    const path = serverUrl + '/v2/private/getLogById'\n    var linkInputs = { id: logId, value: selectedFilename }\n    const config = {\n      headers: { Authorization: `Bearer ${authToken}` }\n    };\n    axios.post(path, linkInputs, config)\n      .then(res => {\n        const logId = res.data.log.id\n        const sessionId = res.data.log.sessionId\n        console.log('GetLogSuccess')\n        console.log(res.data.log.id)\n        console.log(sessionId)\n        //setSelectedSession(sessions[sessionId - 1].dates)\n        setSearchedSessionId(sessionId)\n        setSelectedSessionId(sessionId)\n        setSearchResults([])\n        setSelectedLogId(logId)\n        setCurrentTab(0)\n        // setSubmitted(false)\n        // setLoading(false)\n        //setFilterText(res.data.log.date)\n        //handleGetLogsBySession() // Check if session id is set up\n      })\n      .catch(error => {\n        console.log('Catching error')\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        if (error.response.status === 401) {\n          setAuthToken(\"\")\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        console.log(error.response)\n        alert(error.response.status + ': ' + error.response.data.error)\n      })\n  }\n\n  const handleSearchSubmit = (event) => {\n    setSubmitted(true)\n    setLoading(true)\n    event.preventDefault()\n    const path = serverUrl + '/v2/private/findLogs'\n    const searchInput = { text: searchText, filename: selectedFilename };\n    const config = {\n      headers: { Authorization: `Bearer ${authToken}` }\n    };\n    axios.post(path, searchInput, config)\n      .then(res => {\n        console.log('SearchSuccess')\n        console.log(res.data.logs)\n        var logs = res.data.logs\n        var lenLogs = logs.length\n        setSearchPageCount(getTotalLength(lenLogs))\n        setSearchResults(logs)\n        setSubmitted(false)\n        setLoading(false)\n      })\n      .catch(error => {\n        console.log('Catching error')\n        console.log(error.response)\n        if (error.response === undefined) {\n          alert(error)\n          history.replace('/')\n          history.go(0)\n          return\n        }\n        alert(error.response.status + ': ' + error.response.data.error)\n        if (error.response.status === 403) {\n          cookies.remove(\"rToken\")\n        }\n      })\n  }\n\n  const handleRegisterSubmit = event => {\n    const password = pass;\n    const confirmPassword = confirmPass;\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      setPasswordMatch(false)\n    }\n    else {\n      setPasswordMatch(true)\n      const input = { login: user, password: pass, fingerprint: fingerprint }\n      SendRegisterRequest(input)\n    }\n  }\n\n  const handleLogsPageChange = (page) => {\n    console.log(\"Setting State Logs Page\")\n    setCurrentLogsPage(page)\n  }\n\n  const handleErrorsPageChange = (page) => {\n    console.log(\"Setting State Errors Page\")\n    setCurrentErrorsPage(page)\n  }\n\n  const handleSearchPageChange = (page) => {\n    console.log(\"Setting State Search Page\")\n    setCurrentSearchPage(page)\n  }\n\n  useEffect(() => {\n    if (searchedPage !== 0) {\n      setCurrentLogsPage(searchedPage)\n      console.log(\"Set searched Page: \" + searchedPage)\n    }\n  }, [searchedPage])\n\n  useEffect(() => {\n    let filename = localStorage.getItem(\"lastSelectedFilename\")\n    let sessionId = sessionStorage.getItem(\"lastSelectedSessionId\")\n    sessionId = parseInt(sessionId)\n\n    console.log(\"Selected SessionID is:\")\n    console.log(sessionId)\n    console.log(filename)\n\n    if (filename === null) {\n      filename = \"\"\n    }\n    if (isNaN(sessionId)) {\n      sessionId = 0\n    }\n\n    setSelectedFilename(filename)\n    setSelectedSessionId(sessionId)\n  }, [])\n\n  useEffect(() => {\n    let cookie = cookies.get('rToken')\n    // const fetchData = async() => {\n    // //let cookie = cookies.get(\"rToken\");\n    // const path =  serverUrl + '/v2/auth'\n    // let input = {fingerprint:fingerprint, rToken};\n    // await SendRequest(path, input)\n    // }\n    if (authToken === \"\" && cookie !== undefined) {\n      console.log('AuthAttempt')\n      handleAuthSubmit()\n    }\n    // if () {\n    //   history.replace('/')\n    //   history.go(0)\n    // }\n  }, [authToken]); // used for setting hook only on Mount event; [authToken] listens to variable change\n\n\n  useEffect(() => {\n    if (authToken !== \"\") {\n      console.log(\"Getting Logs Filenames\")\n      handleGetLogsFilenames()\n    }\n  }, [authToken])\n\n  useEffect(() => {\n    if (authToken !== \"\" && selectedSessionId !== 0) { // && logs[0] === undefined && selectedSessionId !== 0\n      console.log('GettingLogs')\n      handleGetLogsBySession()\n    }\n  }, [selectedSessionId, authToken])\n\n  useEffect(() => {\n    if (authToken !== \"\" && selectedLogId !== 0) {\n      console.log('GettingLogsBySearchRequest')\n      handleGetLogsBySession()\n    }\n  }, [selectedLogId, authToken])\n\n  useEffect(() => {\n    if (authToken !== \"\" && selectedFilename !== \"\") {\n      console.log('GettingLogsSessions')\n      localStorage.setItem(\"lastSelectedFilename\", selectedFilename)\n      sessionStorage.removeItem(\"lastSelectedSessionId\")\n      resetPagination()\n      handleGetLogsSessions()\n    }\n  }, [selectedFilename, authToken])\n\n\n\n  useEffect(() => {\n    if (authToken !== \"\" && selectedFilename !== \"\") { // && selectedSessionId !== 0\n      console.log('GettingLogsServices')\n      handleGetLogServiceInfo()\n    }\n  }, [selectedFilename, authToken])\n\n  useEffect(() => {\n    // var sessionId = sessionStorage.getItem(\"lastSelectedSessionId\")\n    // sessionId = parseInt(sessionId)\n    // if (isNaN(sessionId)) {\n    //   return\n    // }\n    // setSelectedSessionId(sessionId)\n\n    if (sessions[0] !== undefined && selectedSessionId !== 0) {\n      console.log(\"Setting Session Name\")\n      setSelectedSession(sessions[selectedSessionId - 1].value)\n    }\n  }, [sessions, selectedSessionId])\n\n  useEffect(() => {\n    if (searchedSessionId !== 0) {\n      sessionStorage.setItem(\"lastSelectedSessionId\", searchedSessionId)\n    }\n  }, [searchedSessionId])\n\n  useEffect(() => {\n    if (selectedSessionId !== 0) {\n      sessionStorage.setItem(\"lastSelectedSessionId\", selectedSessionId)\n    }\n  }, [selectedSessionId])\n\n\n\n  useEffect(() => {\n    console.log(\"Try getting search page\")\n    console.log(logs)\n    console.log(searchedSessionId)\n    if (logs[0] !== undefined && selectedLogId !== 0) { //|| selectedLogId !== 0 && searchedSessionIdId === logs[0].sessionId) {\n      if (logs[0].sessionId !== searchedSessionId) {\n        return\n      }\n      console.log(\"Getting Search Page\")\n      var slice = logs.slice(0, selectedLogId - logs[0].id)\n      var lenSlice = slice.length\n      getSearchedPage(lenSlice)\n    }\n  }, [selectedLogId, logs[0]])\n\n  useEffect(() => {\n\n    if (filterText !== \"\" || selectedService !== \"\") {\n      var logRows = []\n      logs.forEach((log) => {\n        const logDate = log.date\n        const logDesc = log.description.toLowerCase()\n        if (logDate !== filterText && logDesc.indexOf(filterText) === -1 || log.service.indexOf(selectedService) === -1) {\n          return;\n        }\n        logRows.push(log)\n      });\n      var errorRows = []\n      errors.forEach((error) => {\n        const errorDate = error.date\n        const errorDesc = error.description.toLowerCase()\n        if (errorDate !== filterText && errorDesc.indexOf(filterText) === -1 || error.service.indexOf(selectedService) === -1) {\n          return;\n        }\n        errorRows.push(error)\n      });\n      var searchRows = []\n      searchResults.forEach((searchResult) => {\n        const searchDate = searchResult.date\n        const searchDesc = searchResult.description.toLowerCase()\n        if (searchDate !== filterText && searchDesc.indexOf(filterText) === -1 || searchResult.service.indexOf(selectedService) === -1) {\n          return;\n        }\n        searchRows.push(searchResult)\n      });\n      var lenLogs = logRows.length\n      var lenErrs = errorRows.length\n      var lenSearch = searchRows.length\n      setLogsPageCount(getTotalLength(lenLogs))\n      setErrorsPageCount(getTotalLength(lenErrs))\n      setSearchPageCount(getTotalLength(lenSearch))\n      setFilteredLogs(logRows)\n      setFilteredErrors(errorRows)\n      setFilteredSearch(searchRows)\n      //setCurrentPage(1)\n      console.log(\"filter complete\")\n\n    }\n  }, [filterText, selectedService, logs, errors, searchResults])\n\n  // useEffect(() => {\n  //   if (authToken !== \"\" && logs[0] !== undefined) {\n  //     if (selectedSessionId !== undefined){\n  //       console.log('CalculatingLogsLength')\n  //       setLogsPageCount(getTotalLength())\n  //     }\n  //   }\n  // }, [selectedSessionId])\n\n  return (<HashRouter history={history}>\n    <div className=\"App\">\n      <AuthContext.Provider value={{ isAuthenticated: isAuthenticated }}>\n        <Navbar searchText={searchText} handleSearchInput={handleSearchInput}\n          handleSearchSubmit={handleSearchSubmit} handleUnblockSubmit={handleUnblockSubmit}\n          handleFilterTextInput={handleFilterTextInput} filterText={filterText}\n          handleSelectServiceChange={handleSelectServiceChange} services={services}\n          value={selectedService} />\n        <ScrollButton />\n        <Switch>\n          <PrivateRoute exact path='/'\n            data={\n              {\n                logs: logs, errors: errors, searchResults: searchResults, submitted: submitted, logsDropdownValue: selectedFilename,\n                filteredLogs: filteredLogs, filteredErrors: filteredErrors, filteredSearch: filteredSearch, filenames: filenames,\n                sessions: sessions, sessionsDropdownValue: selectedSession, filterText: filterText, filterService: selectedService,\n                loading: loading, logsPageCount: logsPageCount, errorsPageCount: errorsPageCount, searchPageCount: searchPageCount,\n                currentTab: currentTab, itemsPerPage: ItemsPerPage, logId: selectedLogId, searchedPage: searchedPage,\n                currentLogsPage: currentLogsPage, currentErrorsPage: currentErrorsPage, currentSearchPage: currentSearchPage,\n                handleLogsPageChange: handleLogsPageChange, handleErrorsPageChange: handleErrorsPageChange, handleSearchPageChange: handleSearchPageChange,\n                handleSelectSessionChange: handleSelectSessionChange, handleSelectFilenameChange: handleSelectFilenameChange,\n                handleTabClick: handleTabClick, handleLinkClick: handleLinkClick,\n              }\n            }\n            component={Board} />\n          <Route exact path=\"/login\"\n            render={() =>\n              <LoginContainer user={user} pass={pass} handleUsernameInput={handleUsernameInput}\n                handlePassInput={handlePassInput} handleLoginSubmit={handleLoginSubmit}\n                submitted={submitted} isAuthenticated={isAuthenticated} />\n            } />\n          <Route exact path=\"/logout\"\n            render={() =>\n              <Logout handleLogoutSubmit={handleLogoutSubmit}\n                submitted={submitted} isAuthenticated={isAuthenticated} />\n            } />\n          <Route exact path=\"/registration\"\n            render={() =>\n              <Register user={user} pass={pass}\n                confirmPass={confirmPass} passwordMatch={passwordMatch}\n                handleUsernameInput={handleUsernameInput} handlePassInput={handlePassInput}\n                handleConfirmPassInput={handleConfirmPassInput} handleRegisterSubmit={handleRegisterSubmit} />\n            } />\n          {/* <Route exact path='/board'\n            render={() => <BoardContainer handleSearchInput={handleSearchInput} handleSearchSubmit={handleAuthSubmit}\n            searchText={searchText} \n            />} /> */}\n        </Switch>\n      </AuthContext.Provider>\n    </div>\n  </HashRouter>\n  );\n}\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}